buildscript{
	ext{
		queryDslVersion = "4.4.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.3-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'me.portpolio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//unit test 를 위한 google truth 추가
	testImplementation 'com.google.truth:truth:1.1'

	//querydsl 추가
	implementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
	annotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	testImplementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
	testAnnotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

	//그냥하면 문제가 생긴다 java.lang.NoClassDefFoundError : javax/annotation/Generated
	//javax-annotation-api 의존성을 추가
	implementation("javax.annotation:javax.annotation-api:1.3.2")
	annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

}

test {
	useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}