{"version":3,"sources":["page/components/posts/PostCard.js","page/components/atoms/Layouts.js","page/components/common/Footer.js","page/components/common/Loading.js","page/components/posts/Pagination.js","page/PostList.js","page/components/atoms/Buttons.js","page/components/modal/Login.js","page/components/common/Header.js","page/components/atoms/Inputs.js","page/components/modal/TempCard.js","page/PostForm.js","page/components/comments/SingleComment.js","page/components/comments/ReplyComment.js","page/components/comments/Comments.js","page/components/posts/PostTitle.js","page/PostView.js","page/components/user/UserPostCard.js","page/components/user/UserPost.js","page/components/user/UserCategoryCard.js","page/components/user/UserCategory.js","page/components/user/UserAbout.js","page/components/modal/CategoryCard.js","page/components/modal/Category.js","page/UserPage.js","page/components/posts/SearchedPostCard.js","page/SearchedPost.js","page/PopPosts.js","App.js","index.js"],"names":["PostCard","props","Array","from","post","map","CardContainer","CardImg","to","id","src","imageUrl","alt","title","CardTitle","CardAuthor","user","picture","name","style","modifiedDate","substr","styled","div","LayoutHeight","SearchLayoutHeight","Layout","PostLayout","HeaderLayout","MenuLayout","CardsLayout","PostViewLayout","CommentLayout","UserPageLayout","ModalBackLayout","Footer","Container","href","className","Loading","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","PageNumber","number","onClick","PostList","useState","isLoading","setIsLoading","postList","setPostList","currentPage","setCurrentPage","indexOfLast","indexOfFirst","useEffect","axios","get","then","response","data","catch","error","console","log","temp","currentPosts","slice","length","Button","button","fontColor","color","LongButton","LoginButton","LogoutButton","FormButton","CommentButton","NewPostButton","body","document","querySelector","Login","setAttribute","removeAttribute","ModalLayout","handleLoginModal","GoogleButton","header","window","open","NaverButton","Header","onLoginModal","setOnLoginModal","isLogined","setIsLogined","LoginUser","setLoginUser","Logo","Profile","location","alert","Search","TitleInput","input","FormTextarea","textarea","height","CommentTextarea","TempCard","reRenderTempPostDelete","CardLayout","loadTempPosts","content","XButton","delete","PostForm","windowHeight","innerHeight","onCategory","setOnCategory","onTempPost","setOnTempPost","setTitle","setContent","file","fileName","image","setImage","category","setCategory","userCategories","setUserCategories","TempData","setTempData","tempPosts","setTempPosts","callTemp","onModalCategory","onModalTempPost","onChange","e","target","value","placeholder","wrap","FormTools","history","goBack","htmlFor","files","accept","type","SubmitButton","formData","FormData","append","headers","addPost","TempModalLayout","SubmitTempButton","concat","SingleComment","modifyMode","setModifyMode","onReplyTo","setOnReplyTo","ReplyBody","setReplyBody","comment","EditCommentBody","setEditCommentBody","valReplyBody","setvalReplyBody","handleModifyMode","handleReplyTo","url","postId","currentTarget","defaultValue","exceptedPost","put","reRenderCommentsUpdate","CommentCard","CommentTools","parseInt","SessionUser","confirm","parents","spellCheck","replyInfo","reRenderCommentsAdd","ReplyComment","comments","index","parentCommentId","reRenderCommentUpdate","Comments","commentBody","setCommentBody","valBody","setvalBody","cmtData","addComments","PostTitle","posts","categories","createdDate","PostView","setPosts","setComments","setName","setPicture","about","setAbout","valTitle","setvalTitle","valContent","setvalContent","setSessionUser","LikeVal","setLikeVal","LikeCount","setLikeCount","pUrl","match","params","cUrl","likeCount","like_val","pathname","UserImg","UserProfile","AuthorTool","newComment","UserPostCard","UserPost","setisLoading","UserCategoryCard","UserCategory","Categories","setCategories","UserAbout","onModifyMode","setOnModifyMode","AboutButton","editData","AboutCard","CategoryCard","userId","renderCategory","Category","categoryName","setcategoryName","handleCategories","cate","UserPage","OnModifyMode","OnCategories","setOnCategories","setUser","Username","setUsername","UserInfoLayout","UserInfo","UserMenu","activeClassName","exact","path","component","SearchedPostCard","SearchedPost","Posts","searchText","setSearchText","searchPostList","filter","includes","PopPosts","popPostList","setPopPostList","App","ReactDOM","render","getElementById"],"mappings":"6NAIe,SAASA,EAASC,GAC/B,OACE,mCACGC,MAAMC,KAAKF,EAAMG,MAAMC,KAAI,SAAAD,GAC1B,OACE,eAACE,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAMC,GAAE,wBAAmBJ,EAAKK,IAAhC,SACE,qBAAKC,IAAKN,EAAKO,SAAUC,IAAKR,EAAKS,YAEvC,sBAAKJ,GAAG,WAAR,UACE,cAAC,IAAD,CAAMD,GAAE,wBAAmBJ,EAAKK,IAAhC,SACE,cAACK,EAAD,UAAW,+BAAOV,EAAKS,YAEzB,cAACE,EAAD,UACE,cAAC,IAAD,CAAMP,GAAE,uBAAkBJ,EAAKY,KAAKP,IAApC,SACE,sBAAKA,GAAG,SAAR,UACE,qBAAKA,GAAG,UAAR,SACE,qBAAKC,IAAKN,EAAKY,KAAKC,QAClBL,IAAKR,EAAKY,KAAKE,SAGnB,sBAAKT,GAAG,WAAR,UACE,+BAAOL,EAAKY,KAAKE,OACjB,sBAAMC,MAAO,CAAE,SAAY,UAA3B,SAAwCf,EAAKgB,aAAaC,OAAO,EAAG,qBAnB5DjB,EAAKK,SAiCnC,I,wBAAMH,EAAgBgB,IAAOC,IAAV,4wBAoCbhB,EAAUe,IAAOC,IAAV,2TAmBPT,EAAYQ,IAAOC,IAAV,0TAqBTR,EAAaO,IAAOC,IAAV,uyBCpHHC,EAAeF,IAAOC,IAAV,iEAIZE,EAAqBH,IAAOC,IAAV,oEAKlBG,EAASJ,IAAOC,IAAV,olBAwBNI,EAAaL,YAAOI,EAAPJ,CAAH,khBAuBVM,EAAeN,YAAOI,EAAPJ,CAAH,kIAQZO,EAAaP,YAAOI,EAAPJ,CAAH,yJAQVQ,EAAcR,YAAOI,EAAPJ,CAAH,2KAUXS,EAAiBT,YAAOI,EAAPJ,CAAH,khBAqBdU,EAAgBV,IAAOC,IAAV,8EAKbU,EAAiBX,YAAOI,EAAPJ,CAAH,kDAIdY,EAAkBZ,IAAOC,IAAV,wPC/Gb,SAASY,IACtB,OACE,eAACC,EAAD,WACE,8BACE,+CACA,+BAAM,mBAAGC,KAAK,kCAAR,SACJ,mBAAGC,UAAU,wBACf,uCACA,+BAAM,mBAAGD,KAAK,8BAAR,SACJ,mBAAGC,UAAU,gCAGjB,4BACE,+EAMR,I,EAAMF,EAAYd,IAAOC,IAAV,sU,gBCnBA,SAASgB,IACtB,OACE,eAAC,EAAD,WACE,mBAAGD,UAAU,mBACb,iDAKN,I,EAAMF,EAAYd,IAAOC,IAAV,29DCTA,SAASiB,EAAT,GAEb,IAF0E,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACvDC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAEnB,OACE,cAACI,GAAD,UACGL,EAAYvC,KAAI,SAAA6C,GACf,OACE,sBACEZ,UAAU,WACVa,QAAS,WACPR,EAASO,IAHb,SAMEA,GADKA,QAUjB,I,oBAAMD,GAAa3B,IAAOC,IAAV,oSCnBD,SAAS6B,KAAY,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEDF,mBAAS,IAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAIKJ,mBAAS,GAJd,mBAI1BK,EAJ0B,KAIbC,EAJa,KAM3BC,EADe,GACDF,EACdG,EAAeD,EAFA,GAmBrB,OATAE,qBAAU,WACRP,GAAa,GACbQ,IAAMC,IAAI,iBACPC,MAAK,SAAAC,GAAcT,EAAYvD,MAAMC,KAAK+D,EAASC,UACnDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BJ,KAAKV,GAAa,MACpB,IAID,mCACGD,EAAY,cAACf,EAAD,IAEX,qCACE,cAACf,EAAD,UACE,eAACM,EAAD,WACG0B,GACC,cAACxD,EAAD,CAAUI,KAvBH,SAACoE,GACpB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAKE,MAAMb,EAAcD,GACjCa,EAoBqBA,CAAajB,KAE9BF,GAAa,cAACf,EAAD,SAIlB,cAACC,EAAD,CACEC,aAlCW,GAmCXC,WAAYc,EAASmB,OACrBhC,SAAUgB,IACZ,cAACxB,EAAD,SChDH,I,SAAMyC,GAAStD,IAAOuD,OAAV,wWAIL,SAAA5E,GAAK,OAAIA,EAAM6E,WAAa,WAIvB,SAAA7E,GAAK,OAAIA,EAAM8E,OAAS,WAa9BC,GAAa1D,YAAOsD,GAAPtD,CAAH,oEAKV2D,GAAc3D,YAAOsD,GAAPtD,CAAH,iKASX4D,GAAe5D,YAAO2D,GAAP3D,CAAH,+IASZ6D,GAAa7D,YAAOsD,GAAPtD,CAAH,8HASV8D,GAAgB9D,IAAOuD,OAAV,mNAabQ,GAAgB/D,YAAO4D,GAAP5D,CAAH,wDC9DpBgE,GAAOC,SAASC,cAAc,SAErB,SAASC,GAAMxF,GAC5B6D,qBAAU,WAER,OADAwB,GAAKI,aAAa,QAAS,qBACpB,WACLJ,GAAKK,gBAAgB,YAEtB,IAcH,OACE,mCACE,cAACzD,EAAD,UACE,eAAC0D,GAAD,WACE,qBAAKzE,MAAO,CACV,MAAS,MACT,QAAW,OACX,eAAkB,YAHpB,SAKE,wBAAQA,MAAO,CACb,gBAAmB,QACnB,OAAU,QACTgC,QAASlD,EAAM4F,iBAHlB,iBAKF,eAACC,GAAD,CAAc3C,QA1BF,WAClBY,IAAMC,IAAI,+BAAgC,CACxC+B,OAAQ,CACN,8BAA+B,2BAGhC9B,MAAK,SAAAC,GACJI,QAAQC,IAAIL,GACZ8B,OAAOC,WAkB+BlB,MAAO,WAA3C,UACE,mBAAGzC,UAAU,kBADf,yDAGA,eAAC4D,GAAD,CAAanB,MAAO,UAApB,UACE,qCADF,+DAUV,I,SAAMa,GAActE,IAAOC,IAAV,+VAiBXuE,GAAexE,YAAO0D,GAAP1D,CAAH,kEAKZ4E,GAAc5E,YAAO0D,GAAP1D,CAAH,kECgBF6E,I,eAAAA,GArFf,SAAgBlG,GAAQ,IAAD,EACmBoD,oBAAS,GAD5B,mBACd+C,EADc,KACAC,EADA,OAEahD,oBAAS,GAFtB,mBAEdiD,EAFc,KAEHC,EAFG,OAGalD,mBAAS,IAHtB,mBAGdmD,EAHc,KAGHC,EAHG,KAKrB3C,qBAAU,WACRC,IAAMC,IAAI,gBACPC,MAAK,SAAAC,GACkB,KAAlBA,EAASC,KACXoC,GAAa,IAEbE,EAAavC,EAASC,MACtBoC,GAAa,SAGlB,IAEH,IAAMV,EAAmB,WACvBQ,GAAiBD,IAUnB,OACE,mCACGA,GAAgB,cAACX,GAAD,CAAOI,iBAAkBA,IAC1C,eAACjE,EAAD,WACE,cAAC,IAAD,CAAMpB,GAAG,IAAIW,MAAO,CAAE,eAAkB,QAAxC,SACE,cAACuF,GAAD,UACE,4CAIJ,cAACC,GAAD,UACGL,EACC,qCACE,cAAC,IAAD,CAAM9F,GAAG,gBAAT,SAAyB,cAAC6E,GAAD,yCACzB,cAACH,GAAD,CAAc/B,QArBL,WACnBY,IAAMC,IAAI,WAAWC,MAAK,SAAAC,GACxB8B,OAAOY,SAASvE,KAAO,IACvBwE,MAAM,0DAkBE,sCACA,cAAC,IAAD,CAAMrG,GAAE,uBAAkBgG,EAAU/F,IAApC,SACE,qBAAKA,GAAG,UAAR,SACE,qBAAKC,IAAG,UAAK8F,EAAUvF,SAAWL,IAAI,aAK5C,cAACqE,GAAD,CAAa9B,QAAS0C,EAAtB,qCAMN,eAAChE,EAAD,WACE,gCACE,cAAC,IAAD,CAASV,MAAO,CACd,MAAS,UACT,eAAkB,OAClB,QAAW,MACX,OAAU,UACTX,GAAG,mBALN,SAKyB,mBAAG8B,UAAU,cAAb,+CACzB,cAAC,IAAD,CAAS9B,GAAG,IAAIW,MAAO,CACrB,MAAS,UACT,eAAkB,OAClB,QAAW,MACX,OAAU,UAJZ,SAKG,mBAAGmB,UAAU,iBAAb,kDAEL,cAACwE,GAAD,UAEE,cAAC,IAAD,CAAMtG,GAAG,wBAAT,SACE,iCAAQ,mBAAG8B,UAAU,+BAa3BwE,GAASxF,IAAOC,IAAV,iOAeNmF,GAAOpF,IAAOC,IAAV,sQAcJoF,GAAUrF,IAAOC,IAAV,8aC1HAwF,GAAazF,IAAO0F,MAAV,4QAgBVC,GAAe3F,IAAO4F,SAAV,wOAEZ,SAAAjH,GAAK,OAAIA,EAAMkH,UAafC,GAAkB9F,IAAO4F,SAAV,oKC9Bb,SAASG,GAASpH,GAE/B6D,qBAAU,WACR7D,EAAMqH,2BACL,CAACrH,IAeJ,OACE,eAACsH,GAAD,WACE,oBAAIpG,MAAO,CACT,YAAe,OACf,UAAa,aAEbgC,QAASlD,EAAMuH,cAAc,CAC3B3G,MAAOZ,EAAMuE,KAAK3D,MAClB4G,QAASxH,EAAMuE,KAAKiD,UANxB,SAQExH,EAAMuE,KAAK3D,QACb,cAAC6G,GAAD,CAASvE,QApBgB,WAHpBY,IAAM4D,OAAN,wBAA8B1H,EAAMuE,KAAK/D,KAK7CwD,MAAK,SAAAC,GACJ2C,MAAM,qFACN5G,EAAMqH,4BAEPlD,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAc5B,kBAKN,I,eAAMkD,GAAajG,IAAOC,IAAV,+NAWVmG,GAAUpG,IAAOuD,OAAV,iOCxCE,SAAS+C,GAAS3H,GAE/B,IAAM4H,EAAgB7B,OAAO8B,YAAc,IAAO,KAFZ,EAGFzE,oBAAS,GAHP,mBAG/B0E,EAH+B,KAGnBC,EAHmB,OAIF3E,oBAAS,GAJP,mBAI/B4E,EAJ+B,KAInBC,EAJmB,OAKZ7E,mBAASpD,EAAMY,OALH,mBAK/BA,EAL+B,KAKxBsH,EALwB,OAMR9E,mBAASpD,EAAMwH,SANP,mBAM/BA,EAN+B,KAMtBW,EANsB,OAOZ/E,mBAAS,CACjCgF,KAAM,KACNC,SAAU,KAT0B,mBAO/BC,EAP+B,KAOxBC,EAPwB,OAWNnF,mBAAS,IAXH,mBAW/BoF,EAX+B,KAWrBC,EAXqB,OAYMrF,mBAAS,IAZf,mBAY/BsF,EAZ+B,KAYfC,EAZe,OAaNvF,mBAAS,IAbH,mBAa/BwF,EAb+B,KAarBC,EAbqB,OAcJzF,mBAAS,IAdL,mBAc/B0F,EAd+B,KAcpBC,EAdoB,KAgBtClF,qBAAU,WACRC,IAAMC,IAAI,SACPC,MAAK,SAAAC,GACJ0E,EAAkB1I,MAAMC,KAAK+D,EAASC,YAEzC,CAAClE,IAEJ,IAUMuH,EAAgB,SAACyB,GACrBd,EAASc,EAASpI,OAClBuH,EAAWa,EAASxB,UA4BhByB,EAAkB,WACtBlB,GAAeD,IAGXoB,EAAkB,WACtBjB,GAAeD,IAYjBnE,qBAAU,WACRC,IAAMC,IAAI,sBACPC,MAAK,SAAAC,GAAQ,OAAI8E,EAAa9E,EAASC,WACzC,IAEH,IAuBMmD,EAAyB,WAE7BvD,IAAMC,IADM,sBAETC,MAAK,SAAAC,GAAQ,OAAI8E,EAAa9E,EAASC,SACvCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGhC,OACE,qCACE,eAAC1C,EAAD,WACE,cAACoF,GAAD,CAAY7F,KAAK,QAAQkI,SA9CL,SAACC,GACzBlB,EAASkB,EAAEC,OAAOC,QA6CwCA,MAAO1I,EAAO2I,YAAY,uDAChF,cAACvC,GAAD,CAAcwC,KAAK,WAAWvI,KAAK,UAAUkI,SA3CvB,SAACC,GAC3BjB,EAAWiB,EAAEC,OAAOC,QA0C4DA,MAAO9B,EAAS+B,YAAY,qDAAarC,OAAQU,OAE/H,eAAC6B,GAAD,WACE,8BACE,eAACvE,GAAD,CAAYhC,QAASlD,EAAM0J,QAAQC,OAAnC,UAA2C,mBAAGtH,UAAU,sBAAxD,2BAEF,gCACE,cAAC6C,GAAD,uCACA,cAACA,GAAD,CAAYhC,QAASgG,EAArB,sCACA,cAAChE,GAAD,CAAYhC,QAAS+F,EAArB,4CAIHnB,GACC,cAAC7F,EAAD,UACE,eAAC,GAAD,WACE,8BACE,mEACA,wBAAQiB,QAAS+F,EAAjB,kBAEF,gCACE,uBAAOW,QAAQ,YAAf,gCACA,uBAAOT,SAtHM,SAACC,GACxBb,EAAS,CACPH,KAAMgB,EAAEC,OAAOQ,MAAM,GACrBxB,SAAUe,EAAEC,OAAOC,SAoHThB,MAAOA,EAAMF,KACbkB,MAAOhB,EAAMD,SACbyB,OAAO,UACP7I,KAAK,QACL8I,KAAK,OACLvJ,GAAG,iBAEP,gCACE,uBAAOoJ,QAAQ,WAAf,gCACA,yBACEN,MAAOd,EACPW,SA5He,SAACC,GAC5BX,EAAYW,EAAEC,OAAOC,QA4HTrI,KAAK,WACLT,GAAG,WAJL,UAKE,wBAAQ8I,MAAM,eAAd,mDACCZ,GACCA,EAAetI,KAAI,SAAAoI,GACjB,OAAO,wBAAQc,MAAOd,EAAShI,GAAxB,SAA+CgI,EAASvH,MAAvBuH,EAAShI,aAIzD,cAACwJ,GAAD,CAAc9G,QA5GC,SAACkG,IAjBV,WACd,IACMa,EAAW,IAAIC,SAYrB,OAXAD,EAASE,OAAO,QAASvJ,GACzBqJ,EAASE,OAAO,UAAW3C,GAC3ByC,EAASE,OAAO,QAAS7B,EAAMF,KAAME,EAAMD,UAC3C4B,EAASE,OAAO,aAAc3B,GAQvB1E,IAAM3D,KAbD,gBAaW8J,EANR,CACbG,QAAS,CACP,eAAgB,0BAQpBC,GAAUrG,MAAK,SAACC,GACd2C,MAAM,qFACN5G,EAAM0J,QAAQ3G,KAAd,wBAAoCkB,EAASC,UAC5CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAwGtB,+DAIL4D,GACC,cAAC/F,EAAD,UACE,eAACqI,GAAD,WACE,8BAAG,6DAAkB,wBAAQpH,QAASgG,EAAjB,kBACpBJ,EACCA,EAAU1I,KAAI,SAAAmE,GACZ,OACE,cAAC6C,GAAD,CACEG,cAAeA,EACfF,uBAAwBA,EACxB9C,KAAMA,GACDA,EAAK/D,OAEd,iGACJ,cAAC+J,GAAD,CAAkBrJ,MAAO,CAAE,UAAa,QAAUgC,QAtFrC,SAACkG,GAClBxI,GAAS4G,GATbqB,EAAY,CACVjI,MAAOA,EACP4G,QAASA,IAEXnD,QAAQC,IAAIsE,GACL9E,IAAM3D,KAND,qBAMWyI,IAMlB5E,MAAK,SAAAC,GACJ8E,EAAaD,EAAU0B,OAAOvG,IAC9B2C,MAAM,yFAEPzC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAE9BwC,MAAM,kIA6EA,mEAQZ,I,SAAM6C,GAAYpI,IAAOC,IAAV,qMAcTqE,GAActE,IAAOC,IAAV,y4BA0DX0I,GAAe3I,YAAO0D,GAAP1D,CAAH,+CAIZiJ,GAAkBjJ,IAAOC,IAAV,unBAsCfiJ,GAAmBlJ,YAAO0D,GAAP1D,CAAH,6CCjTP,SAASoJ,GAAczK,GAAQ,IAAD,IAEPoD,oBAAS,GAFF,mBAEpCsH,EAFoC,KAExBC,EAFwB,OAGTvH,oBAAS,GAHA,mBAGpCwH,EAHoC,KAGzBC,EAHyB,OAITzH,mBAAS,IAJA,mBAIpC0H,EAJoC,KAIzBC,EAJyB,OAKG3H,mBAASpD,EAAMgL,QAAQ3F,MAL1B,mBAKpC4F,EALoC,KAKnBC,EALmB,OAMH9H,oBAAS,GANN,mBAMpC+H,EANoC,KAMtBC,EANsB,KAQrCC,EAAmB,WACvBV,GAAeD,IAGXY,EAAgB,WACpBT,GAAcD,IAYVW,EAAG,wBAAoBvL,EAAMwL,OAA1B,qBAA6CxL,EAAMgL,QAAQxK,IA4CpE,OACE,qCACGkK,EACC,sBAAKrI,UAAU,cACbnB,MAAO,CACL,MAAS,MACT,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,YACV,UAAa,iBARjB,UAUE,cAACiG,GAAD,CACEgC,SAnEsB,SAACC,GAC/B8B,EAAmB9B,EAAEqC,cAAcnC,QAmE3BA,MAAO2B,EACPS,aAAc1L,EAAMgL,QAAQ3F,OAE9B,sBAAKnE,MAAO,CACV,MAAS,OACT,QAAW,QAFb,UAIE,cAAC6D,GAAD,CACE7D,MAAO,CACL,MAAS,MACT,SAAY,OACZ,aAAgB,KAElBgC,QApDc,WACxB,IAAMyI,EAAe,CACnBtG,KAAM4F,GAGRnH,IAAM8H,IAAIL,EAAKI,GACZ3H,MAAK,SAAAC,GACJ2C,MAAM,kEACN5G,EAAM6L,yBACNR,OACClH,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAoCxB,sCAQA,cAACW,GAAD,CACE7D,MAAO,CACL,MAAS,MACT,SAAY,OACZ,aAAgB,KAElBgC,QAASmI,EANX,4CAWJ,eAACS,GAAD,WACE,eAAC,GAAD,WACE,cAAC,IAAD,CAAMvL,GAAG,IAAT,SACE,sBAAKC,GAAG,SAAR,UACE,qBAAKA,GAAG,UAAR,SAAkB,qBAAKC,IAAKT,EAAMgL,QAAQjK,KAAKC,QAASL,IAAKX,EAAMgL,QAAQjK,KAAKE,SAChF,sBAAKT,GAAG,WAAR,UACE,sBAAMU,MAAO,CAAE,SAAY,QAA3B,SAAsClB,EAAMgL,QAAQjK,KAAKE,OACzD,sBAAMC,MAAO,CAAE,SAAY,UAA3B,SAAwClB,EAAMgL,QAAQ7J,aAAaC,OAAO,EAAG,cAInF,eAAC2K,GAAD,WACG/L,EAAMgL,QAAQjK,KAAKP,KAAOwL,SAAQ,UAAChM,EAAMiM,mBAAP,aAAC,EAAmBzL,KACrD,qCACE,cAAC2E,GAAD,CAAejC,QAASyH,EAAxB,0BACA,cAACxF,GAAD,CAAejC,QAnET,WAChB6C,OAAOmG,QAAQ,yEACjBpI,IAAM4D,OAAO6D,GACVvH,MAAK,SAAAC,GACJjE,EAAM6L,yBACNjF,MAAM,+DACLzC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OA6DpB,6BAGJ,cAACe,GAAD,CAAejC,QAASoI,EAAxB,2BAGJ,sBAAKjJ,UAAU,cACbnB,MAAO,CACL,OAAU,gBACR,UAAa,aAHnB,UAKGlB,EAAMgL,QAAQmB,SACb,qCACE,uBAAMjL,MAAO,CACX,gBAAmB,WADrB,cAGKlB,EAAMgL,QAAQmB,QAAQpL,KAAKE,QAAY,0BAE/CjB,EAAMgL,QAAQ3F,WAIpBuF,GACC,sBAAKvI,UAAU,cACbnB,MAAO,CACL,MAAS,MACT,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,YACV,UAAa,iBARjB,UAUE,cAACiG,GAAD,CACElG,KAAK,OACLmL,WAAW,QACX9C,MAAOwB,EACP3B,SA9IoB,SAACC,GAC7B2B,EAAa3B,EAAEqC,cAAcnC,OAC7B8B,GAAgB,IA6IR7B,YAAc4B,EAA8B,GAAf,4DAE/B,cAACpG,GAAD,CACE7D,MAAO,CACL,MAAS,OACT,SAAY,OACZ,aAAgB,KAElBgC,QAhJU,WAClB,GAAIiI,GAA8B,KAAdL,EAAkB,CACpC,IAAMuB,EAAY,CAChBhH,KAAMyF,GAERhH,IAAM3D,KAAKoL,EAAKc,GACbrI,MAAK,SAAAC,GACJjE,EAAMsM,oBAAoBrI,EAASC,MACnC0C,MAAM,0CACNmE,EAAa,IACbO,OAEDnH,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,WAE9BwC,MAAM,6DA4HF,4CAeV,I,YAAMkF,GAAczK,IAAOC,IAAV,8HAMXR,GAAaO,IAAOC,IAAV,ytBA4CVyK,GAAe1K,IAAOC,IAAV,8IC1OH,SAASiL,GAAavM,GACnC,OACE,8BACGA,EAAMwM,UACLxM,EAAMwM,SAASpM,KAAI,SAAC4K,EAASyB,GAC3B,OAAIzB,EAAQmB,SAAWnB,EAAQmB,QAAQ3L,KAAOR,EAAM0M,gBAEhD,qCACE,cAACjC,GAAD,CACE6B,oBAAqBtM,EAAMsM,oBAC3BK,sBAAuB3M,EAAM2M,sBAC7B3B,QAASA,EAETiB,YAAajM,EAAMiM,YACnBT,OAAQxL,EAAMwL,QAFTR,EAAQxK,IAIf,cAAC+L,GAAD,CACED,oBAAqBtM,EAAMsM,oBAC3BK,sBAAuB3M,EAAM2M,sBAC7BD,gBAAiB1B,EAAQxK,GACzByL,YAAajM,EAAMiM,YACnBO,SAAUxM,EAAMwM,SAChBhB,OAAQxL,EAAMwL,YAIf,uBAAUR,EAAQxK,SCpBpB,SAASoM,GAAS5M,GAAQ,IAAD,EAEAoD,mBAAS,IAFT,mBAE/ByJ,EAF+B,KAElBC,EAFkB,OAGR1J,oBAAS,GAHD,mBAG/B2J,EAH+B,KAGtBC,EAHsB,KAgCtC,OACE,eAACjL,EAAD,WACE,mBAAGb,MAAO,CAAE,SAAY,SAAU,WAAc,SAI/ClB,EAAMwM,UACLxM,EAAMwM,SAASpM,KAAI,SAAC4K,EAASyB,GAC3B,OAAKzB,EAAQmB,QAqBJ,wBAnBL,qCACE,cAAC1B,GAAD,CACE6B,oBAAqBtM,EAAMsM,oBAC3BT,uBAAwB7L,EAAM6L,uBAC9Bb,QAASA,EAETQ,OAAQxL,EAAMwL,OACdS,YAAajM,EAAMiM,aAFdjB,EAAQxK,IAKf,cAAC+L,GAAD,CACED,oBAAqBtM,EAAMsM,oBAC3BT,uBAAwB7L,EAAM6L,uBAC9Ba,gBAAiB1B,EAAQxK,GACzBgM,SAAUxM,EAAMwM,SAChBhB,OAAQxL,EAAMwL,OACdS,YAAajM,EAAMiM,oBAM/B,sBAAK5J,UAAU,cACbnB,MAAO,CACL,MAAS,MACT,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,YACV,UAAa,iBARjB,UAUE,cAACiG,GAAD,CACElG,KAAK,OACLmL,WAAW,QACX9C,MAAOuD,EACP1D,SAhEoB,SAACC,GAC3B0D,EAAe1D,EAAEqC,cAAcnC,OAC/B0D,GAAW,IA+DLzD,YAAawD,EAAU,GAAK,0EAE9B,cAAChI,GAAD,CACE7D,MAAO,CACL,MAAS,OACT,SAAY,OACZ,aAAgB,KAElBgC,QApEoB,WACtB6J,EAdc,SAAC3D,GACnB,IAAMmC,EAAG,wBAAoBvL,EAAMwL,OAA1B,aACHyB,EAAU,CACd5H,KAAMwH,GAER,OAAO/I,IAAM3D,KAAKoL,EAAK0B,GAUrBC,GACGlJ,MAAK,SAAAC,GACJjE,EAAMsM,oBAAoBrI,EAASC,MACnC0C,MAAM,+EACNkG,EAAe,OAEhB3I,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAE9BwC,MAAM,4DAoDJ,4CCxFO,SAASuG,GAAUnN,GAChC,OACE,sBAAKkB,MAAO,CACV,QAAW,OACX,cAAiB,SACjB,SAAY,QAHd,UAKE,sBAAMA,MAAO,CACX,SAAY,SACZ,WAAc,MACd,UAAa,aAHf,SAIIlB,EAAMoN,MAAMC,WAAarN,EAAMoN,MAAMC,WAAa,iBACtD,sBAAMnM,MAAO,CACX,SAAY,SACZ,WAAc,MACd,UAAa,aAHf,SAIIlB,EAAMoN,MAAMxM,QAChB,uBAAMM,MAAO,CACX,SAAY,SACZ,MAAS,QAFX,UAGIlB,EAAMoN,MAAME,YAHhB,eAGyCtN,EAAMoN,MAAMjM,aAHrD,UCRS,SAASoM,GAASvN,GAAQ,IAAD,IACJoD,oBAAS,GADL,mBAC/BC,EAD+B,KACpBC,EADoB,OAEFF,oBAAS,GAFP,mBAE/BsH,EAF+B,KAEnBC,EAFmB,OAIZvH,mBAAS,IAJG,mBAI/BgK,EAJ+B,KAIxBI,EAJwB,OAKNpK,mBAAS,IALH,mBAK/BoJ,EAL+B,KAKrBiB,EALqB,KAOhC7F,EAAgB7B,OAAO8B,YAAc,IAAO,KAPZ,EASZzE,mBAAS,IATG,mBAS/BxC,EAT+B,KASxBsH,EATwB,OAUR9E,mBAAS,IAVD,mBAU/BoE,EAV+B,KAUtBW,EAVsB,OAWd/E,mBAAS,IAXK,mBAW/BnC,EAX+B,KAWzByM,EAXyB,OAYRtK,mBAAS,IAZD,mBAY/BpC,EAZ+B,KAYtB2M,EAZsB,OAaZvK,mBAAS,gDAbG,mBAa/BwK,EAb+B,KAaxBC,EAbwB,OAcNzK,oBAAS,GAdH,mBAc/B0K,EAd+B,KAcrBC,EAdqB,OAeF3K,oBAAS,GAfP,mBAe/B4K,GAf+B,KAenBC,GAfmB,QAgBA7K,mBAAS,MAhBT,qBAgB/B6I,GAhB+B,MAgBlBiC,GAhBkB,SAiBR9K,oBAAS,GAjBD,qBAiB/B+K,GAjB+B,MAiBtBC,GAjBsB,SAkBJhL,mBAAS,GAlBL,qBAkB/BiL,GAlB+B,MAkBpBC,GAlBoB,MAmBhCC,GAAI,UAAMvO,EAAMwO,MAAMC,OAAOjD,QAC7BkD,GAAI,UAAM1O,EAAMwO,MAAMC,OAAOjD,OAAzB,aAEJH,GAAmB,WACvBV,GAAeD,IAGjB7G,qBAAU,WACRC,IAAMC,IAAI,gBACPC,MAAK,SAAAC,GACJiK,GAAejK,EAASC,SACvBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAEhCN,IAAMC,IAAIwK,IACPvK,MAAK,SAAAC,GACJuJ,EAASvJ,EAASC,MAClBgE,EAASjE,EAASC,KAAKtD,OACvBuH,EAAWlE,EAASC,KAAKsD,SACzBkG,EAAQzJ,EAASC,KAAKnD,KAAKE,MAC3B0M,EAAW1J,EAASC,KAAKnD,KAAKC,SAC9B6M,EAAS5J,EAASC,KAAKnD,KAAK6M,OAC5BU,GAAarK,EAASC,KAAKyK,WAC3BP,GAAWnK,EAASC,KAAK0K,aAE1BzK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAE9BN,IAAMC,IAAI2K,IACP1K,MAAK,SAAAC,GAAQ,OAAIwJ,EAAYxJ,EAASC,SACtCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAG9Bd,GAAa,KACZ,CAACiL,GAAMG,KAkEV,OACE,mCACGrL,EAAY,cAACf,EAAD,IAAc,mCAEvBoI,EACE,qCACE,eAAChJ,EAAD,WACE,cAACoF,GAAD,CAAY7F,KAAK,QAAQkI,SAtDb,SAACC,GACzBlB,EAASkB,EAAEC,OAAOC,OAClByE,GAAY,IAoDsDzE,MAAO1I,EAAO2I,YAAY,uDAChF,cAACvC,GAAD,CAAc/F,KAAK,UAAUkI,SAnDf,SAACC,GAC3BjB,EAAWiB,EAAEC,OAAOC,OACpB2E,IAAc,IAiD0D3E,MAAO9B,EAAS+B,YAAY,qDAAarC,OAAQU,OAE/G,eAAC,GAAD,WACE,8BACE,eAAC1C,GAAD,CAAYhC,QAASmI,GAArB,UAAuC,mBAAGhJ,UAAU,sBAApD,2BAEF,gCACE,cAAC6C,GAAD,uCACA,cAACA,GAAD,CAAYhC,QArDL,WACrB,GAAI4K,GAAYE,GAAY,CAC1B,IAAMrC,EAAe,CACnB/K,MAAOA,EACP4G,QAASA,GAEX1D,IAAM8H,IAAI2C,GAAM5C,GACb3H,MAAK,SAAAC,GACJ2C,MAAM,kEACN9C,IAAMC,IAAIwK,IAAMvK,MAAK,SAAAC,GACnBuJ,EAASvJ,EAASC,MAClBgE,EAASjE,EAASC,KAAKtD,OACvBuH,EAAWlE,EAASC,KAAKsD,YAE3BxH,EAAM0J,QAAQ3G,KAAK/C,EAAM2G,SAASkI,UAClClE,GAAc,MACbxG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAqCpB,+CAKN,qCACE,cAAC7C,EAAD,UACE,eAACO,EAAD,WACE,cAACqL,GAAD,CAAWC,MAAOA,IAClB,sBAAKlM,MAAO,CACV,QAAW,OACX,UAAa,OACb,aAAgB,QAHlB,UAKE,cAAC4N,GAAD,UACE,qBAAKrO,IAAKO,EAASL,IAAI,kBAEzB,eAACoO,GAAD,WACE,sBAAM7N,MAAO,CACX,SAAY,SACZ,WAAc,MACd,UAAa,YACb,WAAc,UAJhB,SAMGD,IAEH,mBAAGC,MAAO,CACR,SAAY,SACZ,MAAS,OACT,UAAa,aAHf,SAKa,OAAV0M,EAAiB,+CAAcA,UAItC,qBAAKvL,UAAU,UAAUnB,MAAO,CAC9B,UAAa,YACb,WAAc,YAFhB,SAIGkM,EAAM5F,UAET,qBAAKnF,UAAU,OAAOnB,MAAO,CAC3B,QAAW,OACX,eAAkB,SAClB,WAAc,SACd,UAAa,OACb,aAAgB,QALlB,SAQIiN,GACE,eAACxJ,GAAD,CACEG,MAAM,QACN5B,QA7EF,WACpBY,IAAMC,IAAN,UAAa/D,EAAMwO,MAAMC,OAAOjD,OAAhC,aACGxH,MAAK,SAAAC,GACJmK,IAAW,GACXE,GAAaD,GAAY,MAE1BlK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAqEV,UAIE,mBAAG/B,UAAU,qBAJf,IAIwCgM,MAGxC,eAAC1J,GAAD,CACEG,MAAM,OACN5B,QA5FL,WACjBY,IAAMC,IAAN,UAAa/D,EAAMwO,MAAMC,OAAOjD,OAAhC,UACGxH,MAAK,SAAAC,GACJmK,IAAW,GACXE,GAAaD,GAAY,MAE1BlK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAoFV,UAGE,mBAAG/B,UAAU,qBAHf,IAGwCgM,QAM7CpC,KAA0B,OAAXA,SAAW,IAAXA,QAAA,EAAAA,GAAazL,OAAb,UAAoB4M,EAAMrM,YAA1B,aAAoB,EAAYP,KAC9C,eAACwO,GAAD,WACE,cAACrK,GAAD,CAAQzD,MAAO,CAAE,YAAe,QAC9BgC,QAASmI,GADX,sCAGA,cAAC1G,GAAD,CAAQzB,QA5IH,WACvB6C,OAAOmG,QAAQ,8EACfpI,IAAM4D,OAAO6G,IAAMvK,KAAK4C,MAAM,0EAC9Bb,OAAOY,SAASvE,KAAO,KAyIL,yCAGJ,cAAC,GAAD,CACEkK,oBA3JU,SAAC2C,GAC3BxB,EAAYjB,EAAShC,OAAOyE,KA2JZpD,uBAxJa,WAC7B/H,IAAMC,IAAI2K,IACP1K,MAAK,SAAAC,GAAcwJ,EAAYxJ,EAASC,SACxCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAsJdoI,SAAUA,EACVhB,OAAQxL,EAAMwO,MAAMC,OAAOjD,OAC3BS,YAAaA,UAInB,cAAC/J,EAAD,WAQd,I,GAAM8M,GAAa3N,IAAOC,IAAV,6NAUVyN,GAAc1N,IAAOC,IAAV,2LAYXwN,GAAUzN,IAAOC,IAAV,gWAqBPmI,GAAYpI,IAAOC,IAAV,qMCnRA,SAAS4N,GAAalP,GACnC,OACE,eAAC,GAAD,WACE,qBAAKQ,GAAG,MAAR,SACE,qBAAKC,IAAKT,EAAMG,KAAKO,SAAUC,IAAKX,EAAMG,KAAKS,UAEjD,oBAAIM,MAAO,CACT,eAAkB,OAClB,MAAS,SAFX,SAGIlB,EAAMG,KAAKS,QACf,sBAAMM,MAAO,CACX,MAAS,QADX,SAEIlB,EAAMG,KAAKqH,UACf,sBAAKtG,MAAO,CACV,QAAW,OACX,eAAkB,gBAClB,SAAY,UAHd,UAKE,mBAAGA,MAAO,CACR,MAAS,SADX,SAEIlB,EAAMG,KAAKgB,aAAaC,OAAO,EAAG,MACtC,oBAAGF,MAAO,CACR,MAAS,QADX,UAEG,mBAAGmB,UAAU,qBAAwBrC,EAAMG,KAAKwO,mBAM3D,I,GAAMrH,GAAajG,IAAOC,IAAV,2eC3BD,SAAS6N,GAASnP,GAAQ,IAAD,EACZoD,mBAAS,IADG,mBAC/BgK,EAD+B,KACxBI,EADwB,OAEJpK,oBAAS,GAFL,mBAE/BC,EAF+B,KAEpB+L,EAFoB,KAatC,OAVAvL,qBAAU,WAERC,IAAMC,IAAI/D,EAAM2G,SAASkI,UACtB7K,MAAK,SAAAC,GACJuJ,EAASvJ,EAASC,SAEnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BJ,KAAKoL,GAAa,MACpB,CAACpP,EAAM2G,SAASkI,WAGjB,mCACGxL,EAAY,cAACf,EAAD,IACX,mCAEqB,IAAjB8K,EAAM1I,OACJ,qBAAKxD,MAAO,CACV,UAAa,SACb,UAAa,QAFf,yFAKAkM,EAAMhN,KAAI,SAACD,GACT,OACE,mCACE,mBAAGe,MAAO,CAAE,eAAkB,QAAUkB,KAAI,wBAAmBjC,EAAKK,IAApE,SACE,cAAC0O,GAAD,CAAc/O,KAAMA,GAAWA,EAAKK,eC7B3C,SAAS6O,GAAiBrP,GACvC,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAMkB,MAAO,CAAE,eAAkB,OAAQ,gBAAmB,eAC1DX,GAAG,SADL,SAEE,qBAAIW,MAAO,CACT,OAAU,IACV,KAAQ,MACR,IAAO,OACP,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,MAAS,SAPX,UASE,iCACE,mBAAGmB,UAAU,wBACZrC,EAAMwI,SAASvH,KAFlB,sBAGA,mBAAGoB,UAAU,4BAEb,sBAAMnB,MAAO,CACX,SAAY,UADd,SAEIlB,EAAMwI,SAASrH,aAAaC,OAAO,EAAG,aASpD,I,MAAMkG,GAAajG,IAAOC,IAAV,0VC/BD,SAASgO,GAAatP,GAAQ,IAAD,EACNoD,mBAAS,IADH,mBACnCmM,EADmC,KACvBC,EADuB,KAU1C,OAPA3L,qBAAU,WACRC,IAAMC,IAAI/D,EAAM2G,SAASkI,UACtB7K,MAAK,SAAAC,GACJuL,EAAcvP,MAAMC,KAAK+D,EAASC,YAErC,CAAClE,IAGF,mCACyB,IAAtBuP,EAAW7K,OACV,qBAAKxD,MAAO,CACV,UAAa,SACb,UAAa,QAFf,wFAIA,mCAEIqO,EAAWnP,KAAI,SAAAoI,GACb,OAAO,cAAC,GAAD,CAAcA,SAAUA,GAAeA,EAAShI,WClBtD,SAASiP,GAAUzP,GAAQ,IAAD,EACCoD,oBAAS,GADV,mBAChCsM,EADgC,KAClBC,EADkB,OAEbvM,mBAAS,IAFI,mBAEhCwK,EAFgC,KAEzBC,EAFyB,KAIvChK,qBAAU,WACRC,IAAMC,IAAI/D,EAAM2G,SAASkI,UACtB7K,MAAK,SAAAC,GAAQ,OAAI4J,EAAS5J,EAASC,KAAK0J,YAC1C,CAAC5N,EAAM2G,SAASkI,WAkBnB,OACE,mCACGa,EACC,sBAAKxO,MAAO,CACV,QAAW,OACX,cAAiB,SACjB,OAAU,YACV,MAAS,OAJX,UAME,0BAAUA,MAAO,CACf,OAAU,OACV,OAAU,SAEVoI,MAAOsE,EACPzE,SA9BgB,SAACC,GACzByE,EAASzE,EAAEqC,cAAcnC,UA+BnB,sBAAKpI,MAAO,CACV,QAAW,QADb,UAGE,cAAC0O,GAAD,CAAa1M,QA/BC,SAACkG,GACvB,IAAMyG,EAAW,CACfjC,MAAOA,GAGT9J,IAAM8H,IAAI5L,EAAM2G,SAASkI,SAAUgB,GAAU7L,MAAK,WAChD4C,MAAM,kEACN+I,GAAiBD,OAwBX,sCACA,cAACE,GAAD,CACE1M,QAAS,WAAQyM,GAAiBD,IADpC,4CAMJ,sBAAKxO,MAAO,CACV,QAAW,OACX,cAAiB,SACjB,eAAkB,SAClB,WAAc,SACd,UAAa,QALf,UAOE,cAAC4O,GAAD,UAAsB,OAAVlC,EAAiB,sFAAuBA,IACpD,cAAC7I,GAAD,CACE7D,MAAO,CACL,MAAS,MACT,aAAgB,KAElBgC,QAAS,WACPyM,GAAiBD,IANrB,+BAgBV,I,MAAME,GAAcvO,YAAO0D,GAAP1D,CAAH,oEAMXyO,GAAYzO,IAAOC,IAAV,iKCnFA,SAASyO,GAAa/P,GAcnC,OACE,eAAC,GAAD,WACE,oBAAIkB,MAAO,CACT,YAAe,OACf,UAAa,aAFf,SAGIlB,EAAMwI,SAASvH,OACnB,cAAC,GAAD,CAASiC,QAfgB,WAHpBY,IAAM4D,OAAN,uBAA6B1H,EAAMgQ,OAAnC,uBAAwDhQ,EAAMwI,SAAShI,KAK3EwD,MAAK,SAAAC,GACJ2C,MAAM,8EACN5G,EAAMiQ,oBAEP9L,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAS5B,kBAKN,I,GAAMkD,GAAajG,IAAOC,IAAV,+NAWVmG,GAAUpG,IAAOuD,OAAV,iOChCPS,GAAOC,SAASC,cAAc,SAErB,SAAS2K,GAASlQ,GAAQ,IAAD,EACNoD,mBAAS,IADH,mBAC/BoF,EAD+B,KACrBC,EADqB,OAEErF,mBAAS,IAFX,mBAE/B+M,EAF+B,KAEjBC,EAFiB,KAsBhCH,EAAiB,WACrBnM,IAAMC,IAAN,uBAA0B/D,EAAMgQ,OAAhC,gBACGhM,MAAK,SAAAC,GACJwE,EAAYxE,EAASC,UAc3B,OAVAL,qBAAU,WAMR,OALAwB,GAAKI,aAAa,QAAS,qBAC3B3B,IAAMC,IAAN,uBAA0B/D,EAAMgQ,OAAhC,gBACGhM,MAAK,SAAAC,GACJwE,EAAYxE,EAASC,SAElB,WACLmB,GAAKK,gBAAgB,YAEtB,CAAC1F,IAEF,cAACiC,EAAD,UACE,eAAC,GAAD,WACE,8BACE,yEACA,wBAAQiB,QAASlD,EAAMqQ,iBAAvB,kBAEF,qBAAKnP,MAAO,CACV,OAAU,SACV,MAAS,QAFX,SAKIsH,GACAA,EAASpI,KAAI,SAACkQ,EAAM7D,GAClB,OAAO,cAACsD,GAAD,CAAcE,eAAgBA,EAEnCD,OAAQhQ,EAAMgQ,OACdxH,SAAU8H,GAFL7D,QAOb,sBAAKvL,MAAO,CACV,QAAW,OACX,cAAiB,UAFnB,UAKE,uBAAO6I,KAAK,OACVvJ,GAAG,QACHS,KAAK,OACLqI,MAAO6G,EACPhH,SAlEmB,SAAAC,GAC3BgH,EAAgBhH,EAAEqC,cAAcnC,QAkExBC,YAAY,gGACZrI,MAAO,CAAE,MAAS,OAAQ,OAAU,OAAQ,OAAU,UAExD,cAACyD,GAAD,CAAQzD,MAAO,CAAE,MAAS,QAAUgC,QAnEnB,WACvB,GAAIiN,EAAazL,OAAS,EACxBkC,MAAM,kFACD,CACL,IAAM1C,EAAO,CACXjD,KAAMkP,GAERrM,IAAM3D,KAAN,uBAA2BH,EAAMgQ,OAAjC,eAAsD9L,GACnDF,MAAK,SAAAC,GACJ2C,MAAM,8EACNqJ,SAyDA,kCAQV,I,SAAMtK,GAActE,IAAOC,IAAV,88BC/EF,SAASiP,GAASvQ,GAAQ,IAAD,EACEoD,oBAAS,GADX,mBAC/BoN,EAD+B,KACjBb,EADiB,OAEEvM,oBAAS,GAFX,mBAE/BqN,EAF+B,KAEjBC,EAFiB,OAGdtN,mBAAS,IAHK,mBAG/BrC,EAH+B,KAGzB4P,EAHyB,OAINvN,mBAASrC,EAAKE,MAJR,mBAI/B2P,EAJ+B,KAIrBC,EAJqB,OAKAzN,mBAAS,MALT,mBAK/B6I,EAL+B,KAKlBiC,EALkB,KAOhCmC,EAAmB,WACvBK,GAAiBD,IAGnB5M,qBAAU,WACRC,IAAMC,IAAI,gBACPC,MAAK,SAAAC,GACJiK,EAAejK,EAASC,SACvBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC5BpE,EAAMwO,MAAMC,OAAOuB,QACrBlM,IAAMC,IAAN,uBAA0B/D,EAAMwO,MAAMC,OAAOuB,SAC1ChM,MAAK,SAAAC,GAAQ,OAAI0M,EAAQ1M,EAASC,WAGtC,CAAClE,EAAMwO,MAAMC,OAAOuB,SAEvB,IAAM3E,EAAmB,WACvBsE,GAAiBa,IA6BnB,OACE,qCAAGC,GAAgB,cAACP,GAAD,CAAUG,iBAAkBA,EAAkBL,OAAQjP,EAAKP,KAC5E,cAACe,EAAD,CAAcL,MAAO,CAAE,aAAgB,QAAvC,SACE,eAACc,EAAD,WACE,cAAC8O,GAAD,UACGN,EACC,eAACO,GAAD,WACE,qBAAK7P,MAAO,CACV,MAAS,OACT,OAAU,OACV,aAAgB,QACfT,IAAG,UAAKM,EAAKC,SAAWL,IAAI,YAC/B,uBACEwI,SA1BO,SAACC,GACtByH,EAAYzH,EAAEqC,cAAcnC,QA0BdS,KAAK,OACLR,YAAY,uEACZrI,MAAO,CACL,OAAU,OACV,OAAU,SACV,OAAU,OACV,aAAgB,oBAGpB,gCACE,cAACyD,GAAD,CAAQzB,QAlDG,WACzB,IAAMqI,EAAG,uBAAmBvL,EAAMwO,MAAMC,OAAOuB,QAC/ClM,IAAM8H,IAAIL,EAAK,CACbtK,KAAM2P,EACN5P,QAASD,EAAKC,UAEbgD,MAAK,SAAAC,GACJ2C,MAAM,kEACNb,OAAOY,SAASvE,KAAOmJ,KAExBpH,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAwChB,sCACA,sCACA,cAACO,GAAD,CAAQzB,QAASmI,EAAjB,4CAIJ,eAAC0F,GAAD,WACE,qBAAK7P,MAAO,CACV,MAAS,OACT,OAAU,OACV,aAAgB,QACfT,IAAG,UAAKM,EAAKC,SAAWL,IAAI,YAC/B,6BAAKI,EAAKE,OACTgL,GAAeA,EAAYzL,MAAZ,OAAmBO,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMP,KACvC,qCACE,gCACE,cAACmE,GAAD,CAAQzB,QAASmI,EAAjB,sCACA,sCACA,cAAC1G,GAAD,CAAQzB,QAnDH,WACvB6C,OAAOmG,QAAQ,wEACfpI,IAAM4D,OAAN,uBAA6B1H,EAAMwO,MAAMC,OAAOuB,SAC7ChM,MAAK,WACJ4C,MAAM,kEACNb,OAAOY,SAASvE,KAAO,QA8CT,yCAEF,8BACE,cAACuC,GAAD,CAAQzD,MAAO,CACb,MAAS,OACT,UAAa,UAEbgC,QAASmN,EAJX,0EAWZ,eAAC,IAAD,WACE,eAACW,GAAD,WACE,cAAC,IAAD,CAASzQ,GAAE,uBAAkBP,EAAMwO,MAAMC,OAAOuB,OAArC,UACT3N,UAAU,UACV4O,gBAAgB,SAFlB,gCAGA,cAAC,IAAD,CAAS1Q,GAAE,uBAAkBP,EAAMwO,MAAMC,OAAOuB,OAArC,eACT3N,UAAU,UACV4O,gBAAgB,SAFlB,gCAGA,cAAC,IAAD,CAAS1Q,GAAE,uBAAkBP,EAAMwO,MAAMC,OAAOuB,OAArC,UACT3N,UAAU,UACV4O,gBAAgB,SAFlB,6BAIF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,uBAAkBnR,EAAMwO,MAAMC,OAAOuB,OAArC,UAAqDoB,UAAWjC,KACjF,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAI,uBAAkBnR,EAAMwO,MAAMC,OAAOuB,OAArC,eAA0DoB,UAAW9B,KACtF,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAI,uBAAkBnR,EAAMwO,MAAMC,OAAOuB,OAArC,UAAqDoB,UAAW3B,gBAKzF,cAACvN,EAAD,OAKN,I,YAAM4O,GAAiBzP,IAAOC,IAAV,uIAQdyP,GAAW1P,IAAOC,IAAV,uKASR0P,GAAW3P,IAAOC,IAAV,weC/JC,SAAS+P,GAAiBrR,GACvC,OACE,mCACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAMO,GAAE,wBAAmBP,EAAMG,KAAKK,IAAtC,SACE,qBAAKC,IAAKT,EAAMG,KAAKO,SAAUC,IAAKX,EAAMG,KAAKS,YAEnD,sBAAKJ,GAAG,WAAR,UACE,cAAC,IAAD,CAAMD,GAAE,wBAAmBP,EAAMG,KAAKK,IAAtC,SACE,cAAC,GAAD,UAAW,+BAAOR,EAAMG,KAAKS,YAE/B,cAAC,GAAD,UACE,cAAC,IAAD,CAAML,GAAE,uBAAkBP,EAAMG,KAAKY,KAAKP,IAA1C,SACE,sBAAKA,GAAG,SAAR,UACE,qBAAKA,GAAG,UAAR,SACE,qBAAKC,IAAKT,EAAMG,KAAKY,KAAKC,QACxBL,IAAKX,EAAMG,KAAKY,KAAKE,SAGzB,sBAAKT,GAAG,WAAR,UACE,+BAAOR,EAAMG,KAAKY,KAAKE,OACvB,sBAAMC,MAAO,CAAE,SAAY,UAA3B,SAAwClB,EAAMG,KAAKgB,iCAWrE,IAAMd,GAAgBgB,IAAOC,IAAV,8wBAoCbhB,GAAUe,IAAOC,IAAV,6TAmBPT,GAAYQ,IAAOC,IAAV,4TAqBTR,GAAaO,IAAOC,IAAV,yyBC3GD,SAASgQ,KAAgB,IAAD,EACXlO,mBAAS,IADE,mBAC9BmO,EAD8B,KACvB/D,EADuB,OAEDpK,mBAAS,IAFR,mBAE9BoO,EAF8B,KAElBC,EAFkB,KAIrC5N,qBAAU,WACRC,IAAMC,IAAI,iBACPC,MAAK,SAAAC,GAAcuJ,EAASvJ,EAASC,SACrCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IAEH,IAIMsN,EAAiBH,EAAMI,QAAO,SAAAxR,GAClC,OAAOA,EAAKS,MAAMgR,SAASJ,MAG7B,OACE,qCACE,eAAChQ,EAAD,WACE,qBAAKN,MAAO,CACV,OAAU,SACV,MAAS,MACT,QAAW,OACX,eAAkB,UAJpB,SAME,uBAAO6I,KAAK,OACV7I,MAAO,CACL,OAAU,OACV,MAAS,MACT,OAAU,QAEZqI,YAAY,0DACZD,MAAOkI,EACPrI,SAzBe,SAACC,GACxBqI,EAAcrI,EAAEqC,cAAcnC,YA0B1B,cAACzH,EAAD,UACG6P,GACCA,EAAetR,KAAI,SAAAD,GACjB,OAAO,cAACkR,GAAD,CAAkBlR,KAAMA,GAAWA,EAAKK,YAKvD,cAAC0B,EAAD,OC3CS,SAAS2P,KAAY,IAAD,EACCzO,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEKF,mBAAS,IAFd,mBAE1B0O,EAF0B,KAEbC,EAFa,OAIK3O,mBAAS,GAJd,mBAI1BK,EAJ0B,KAIbC,EAJa,KAM3BC,EADe,GACDF,EACdG,EAAeD,EAFA,GAkBrB,OARAE,qBAAU,WACRP,GAAa,GACbQ,IAAMC,IAAI,oBACPC,MAAK,SAAAC,GAAQ,OAAI8N,EAAe9N,EAASC,SACzCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC9Bd,GAAa,KACZ,IAGD,mCACGD,EAAY,cAACf,EAAD,IAEX,qCACE,cAACf,EAAD,UACE,eAACM,EAAD,WACGiQ,GACC,cAAC/R,EAAD,CAAUI,KAtBH,SAACoE,GACpB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAKE,MAAMb,EAAcD,GACjCa,EAmBqBA,CAAasN,KAE9BzO,GAAa,cAACf,EAAD,SAIlB,cAACC,EAAD,CACEC,aAjCW,GAkCXC,WAAYqP,EAAYpN,OACxBhC,SAAUgB,IACZ,cAACxB,EAAD,SCjBK8P,OAtBf,WAGE,OACE,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOd,OAAK,EAACC,KAAK,IAAIC,UAAWjO,KACjC,cAAC,IAAD,CAAO+N,OAAK,EAACC,KAAK,gBAAgBC,UAAWjO,KAC7C,cAAC,IAAD,CAAO+N,OAAK,EAACC,KAAK,mBAAmBC,UAAWS,KAChD,cAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,wBAAwBC,UAAWE,KACrD,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,gBAAgBC,UAAWzJ,KAC7C,cAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,wBAAwBC,UAAW7D,KACrD,cAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,uBAAuBC,UAAWb,cCnB9D0B,IAASC,OACP,cAAC,GAAD,IAEA5M,SAAS6M,eAAe,W","file":"static/js/main.6b92a943.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PostCard(props) {\r\n  return (\r\n    <>\r\n      {Array.from(props.post).map(post => {\r\n        return (\r\n          <CardContainer key={post.id}>\r\n            <CardImg>\r\n              <Link to={`/api/v2/posts/${post.id}`}>\r\n                <img src={post.imageUrl} alt={post.title} />\r\n              </Link></CardImg>\r\n            <div id=\"postInfo\">\r\n              <Link to={`/api/v2/posts/${post.id}`}>\r\n                <CardTitle><span>{post.title}</span></CardTitle>\r\n              </Link>\r\n              <CardAuthor>\r\n                <Link to={`/api/v2/user/${post.user.id}`}>\r\n                  <div id=\"author\">\r\n                    <div id=\"profile\">\r\n                      <img src={post.user.picture}\r\n                        alt={post.user.name}\r\n                      />\r\n                    </div>\r\n                    <div id=\"userInfo\">\r\n                      <span>{post.user.name}</span>\r\n                      <span style={{ \"fontSize\": \"0.4rem\" }}>{post.modifiedDate.substr(0, 10)}</span>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </CardAuthor>\r\n            </div>\r\n          </CardContainer>\r\n        )\r\n      })}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardContainer = styled.div`\r\n  width : 340px;\r\n  margin : 2rem 1.25rem;\r\n  transition : box-shadow 0.25s ease-in-out, transform 0.25s ease-in 0s;\r\n  &:hover {\r\n    box-shadow : 0px 4px 16px 0px #3d3d3d;\r\n    transform : translateY(-.5rem);\r\n  }\r\n\r\n  #postInfo a{\r\n  text-decoration : none;\r\n  }\r\n  @media screen and (max-width:1200px){\r\n    width : 288px;\r\n    margin : 1.5rem 1rem;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    display : flex;\r\n    flex-direction : row-reverse;\r\n    width : calc(100% - 5rem);\r\n    margin : 1rem auto;\r\n    justify-content:space-between;\r\n    #postInfo{\r\n      width : 70%;\r\n      height : 100%;\r\n    }\r\n  }\r\n  @media screen and (max-width:768px){\r\n    width : 99% auto;\r\n    #postInfo{\r\n      width : 80%;\r\n      height : 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardImg = styled.div`\r\n  width : 100%;\r\n  height : 15.625rem;\r\n  overflow:hidden;\r\n  img {\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    width : 9.375rem;\r\n    height : 9.375rem;\r\n    img{\r\n      width : 200%;\r\n      height : 200%;\r\n      margin : -50%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width : 100%;\r\n  font-size : 1.3rem;\r\n  font-weight : 700;\r\n  color : black;\r\n  \r\n  span{\r\n  text-decoration:none;\r\n  margin-left : .4rem;\r\n  }\r\n\r\n  @media screen and (max-width:990px){\r\n    height : 4.6875rem;\r\n    display:flex;\r\n\r\n    *{\r\n      margin : 2.3rem 1rem;\r\n    }\r\n  }\r\n\r\n`;\r\nconst CardAuthor = styled.div`\r\n  width : 100%;\r\n  padding : 0.3rem 0.5rem;\r\n  display : flex;\r\n  justify-content :space-between;\r\n  align-items:center;\r\n\r\n  a{\r\n    text-decoration:none;\r\n    color:black;\r\n  }\r\n\r\n  #author{\r\n    display : flex;\r\n    align-items : center;\r\n    font-size : .8rem;\r\n  }\r\n\r\n  #profile{\r\n    width : 2rem;\r\n    height : 2rem;\r\n    border-radius:2rem;\r\n    background-color : hotpink;\r\n    overflow: hidden;\r\n    margin-right : 0.3rem;\r\n  }\r\n\r\n  #profile img{\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n\r\n  #userInfo{\r\n    display : flex;\r\n    flex-direction:column;\r\n  }\r\n  #author:hover{\r\n    text-decoration:underline;\r\n  }\r\n\r\n  @media screen and (max-width:990px){\r\n    height : 4.6875rem;\r\n    #author{\r\n      margin-left : .5rem;\r\n      margin-bottom : 2rem;\r\n    }\r\n  }  \r\n`;","import styled from 'styled-components';\r\n\r\nexport const LayoutHeight = styled.div`\r\nmin-height : calc(100vh - 16.5rem);\r\n`;\r\n\r\nexport const SearchLayoutHeight = styled.div`\r\n  min-height : calc(100vh - 12.75rem);\r\n`;\r\n\r\n\r\nexport const Layout = styled.div`\r\n  width : 71.25rem;\r\n  margin : 0 auto;\r\n  @media screen and (max-width:1200px){\r\n    width : 60rem;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-clac(100% -5rem);\r\n  }\r\n  @media screen and (max-width:768px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-calc(100% -5rem);\r\n  }\r\n\r\n  @media screen and (max-width:510px){\r\n    width : calc(100% - 2rem);\r\n    width : -webkit-calc(100% - 2rem);\r\n    width : -moz-calc(100% -2rem);\r\n  }\r\n`;\r\n\r\nexport const PostLayout = styled(Layout)`\r\n  width : 60rem;\r\n  padding-top : 3rem;\r\n  @media screen and (max-width:990px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-clac(100% -5rem);\r\n  }\r\n  @media screen and (max-width:768px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-calc(100% -5rem);\r\n  }\r\n\r\n  @media screen and (max-width:510px){\r\n    width : calc(100% - 2rem);\r\n    width : -webkit-calc(100% - 2rem);\r\n    width : -moz-calc(100% -2rem);\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const HeaderLayout = styled(Layout)`\r\n  height : 3rem;\r\n  display : flex;\r\n  justify-content : space-between;\r\n  align-items:flex-end;\r\n  \r\n`;\r\n\r\nexport const MenuLayout = styled(Layout)`\r\n  padding-top : 1rem;\r\n  font-size : 1rem;\r\n  display : flex;\r\n  justify-content:space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const CardsLayout = styled(Layout)`\r\n  padding-top : .5rem;\r\n  display : flex;\r\n  flex-wrap : wrap;\r\n  \r\n  @media screen and (max-width:990px){\r\n    flex-direction : column;\r\n  }\r\n`;\r\n\r\nexport const PostViewLayout = styled(Layout)`\r\n  width : 50rem;\r\n  padding-top : 3rem;\r\n  @media screen and (max-width:990px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-clac(100% -5rem);\r\n  }\r\n  @media screen and (max-width:768px){\r\n    width : calc(100% - 5rem);\r\n    width : -webkit-calc(100% - 5rem);\r\n    width : -moz-calc(100% -5rem);\r\n  }\r\n\r\n  @media screen and (max-width:510px){\r\n    width : calc(100% - 2rem);\r\n    width : -webkit-calc(100% - 2rem);\r\n    width : -moz-calc(100% -2rem);\r\n  }\r\n`;\r\n\r\nexport const CommentLayout = styled.div`\r\n  width : calc(100% - 2rem);\r\n  margin : 0 auto;\r\n`;\r\n\r\nexport const UserPageLayout = styled(Layout)`\r\n  margin-top : 1rem;\r\n`;\r\n\r\nexport const ModalBackLayout = styled.div`\r\n  width : 100vw;\r\n  height : 100vh;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content : center;\r\n  align-items : center;\r\n  position : absolute;\r\n  top:0;\r\n  backdrop-filter : blur(2px);\r\n  z-index : 5;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Container>\r\n      <p>\r\n        <span>#Contact : </span>\r\n        <span><a href=\"mailto:moonhongmyeong@gmail.com\">\r\n          <i className=\"fas fa-envelope\"></i></a></span>\r\n        <span> , </span>\r\n        <span><a href=\"https://github.com/moon4368\">\r\n          <i className=\"fab fa-github-square\"></i></a>\r\n        </span>\r\n      </p>\r\n      <p>\r\n        <span>Design by Moon Hong Myeong ⓒ 2021</span>\r\n      </p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  color: gray;\r\n  font-family: \"Frank Ruhl Libre\", serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: center;\r\n  align-items: center;\r\n  height : 116px;\r\n\r\n  a {\r\n  text-decoration: none;\r\n  color: var(--text-white-color);\r\n  font-size: 1.2rem;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Container>\r\n      <i className=\"fas fa-spinner\"></i>\r\n      <span>Loading...</span>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  width : 100vw;\r\n  height : 90vh;\r\n  position : absolute;\r\n  top:0;\r\n  left:0;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content : center;\r\n  align-items : center;\r\n  font-size : 4rem;\r\n  .fa-spinner{\r\n    animation : rotation 2s 1s infinite linear;\r\n    -webkit-animation : rotation 2s 1s infinite linear;\r\n    -moz-animation : rotation 2s 1s infinite linear;\r\n    -ms-animation : rotation 2s 1s infinite linear;\r\n    -o-animation : rotation 2s 1s infinite linear;\r\n  }\r\n  span{\r\n    margin-top : 5px;\r\n    font-size : 2rem;\r\n    animation : fadeOut 3s 2s infinite;\r\n    -webkit-animation : fadeOut 3s 2s infinite;\r\n    -moz-animation : fadeOut 3s 2s infinite;\r\n    -ms-animation : fadeOut 3s 2s infinite;\r\n    -o-animation : fadeOut 3s 2s infinite;\r\n  }\r\n  \r\n  @keyframes rotation{\r\n    from{\r\n      transform : rotate(0deg);\r\n    }\r\n    to{\r\n      transform : rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes rotation{\r\n    from{\r\n      transform : rotate(0deg);\r\n    }\r\n    to{\r\n      transform : rotate(360deg);\r\n    }\r\n  }\r\n  @-moz-keyframes rotation{\r\n    from{\r\n      transform : rotate(0deg);\r\n    }\r\n    to{\r\n      transform : rotate(360deg);\r\n    }\r\n  }\r\n  @-o-keyframes rotation{\r\n    from{\r\n      transform : rotate(0deg);\r\n    }\r\n    to{\r\n      transform : rotate(360deg);\r\n    }\r\n  }\r\n  @-ms-keyframes rotation{\r\n    from{\r\n      transform : rotate(0deg);\r\n    }\r\n    to{\r\n      transform : rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes fadeOut{\r\n    from{\r\n      opacity : 0;\r\n    }\r\n    to{\r\n      opacity : 1;\r\n    }\r\n  }\r\n  @-webkit-keyframes fadeOut{\r\n    from{\r\n      opacity : 0;\r\n    }\r\n    to{\r\n      opacity : 1;\r\n    }\r\n  }\r\n  @-moz-keyframes fadeOut{\r\n    from{\r\n      opacity : 0;\r\n    }\r\n    to{\r\n      opacity : 1;\r\n    }\r\n  }\r\n  @-ms-keyframes fadeOut{\r\n    from{\r\n      opacity : 0;\r\n    }\r\n    to{\r\n      opacity : 1;\r\n    }\r\n  }\r\n  @-o-keyframes fadeOut{\r\n    from{\r\n      opacity : 0;\r\n    }\r\n    to{\r\n      opacity : 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, paginate }) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <PageNumber>\r\n      {pageNumbers.map(number => {\r\n        return (\r\n          <span\r\n            className=\"pageLink\"\r\n            onClick={() => {\r\n              paginate(number)\r\n            }}\r\n            key={number}\r\n          >{number}</span>\r\n        )\r\n      })\r\n\r\n      }\r\n    </PageNumber>\r\n  )\r\n}\r\n\r\nconst PageNumber = styled.div`\r\n  margin : 1rem auto;\r\n  width : 100%;\r\n  display : flex;\r\n  justify-content:center;\r\n\r\n  .pageLink{\r\n    margin : 0 0.3rem;\r\n    cursor : pointer;\r\n    font-size : 1.2rem;\r\n    font-weight : 500;\r\n  }\r\n\r\n  .pageLink:hover{\r\n    text-decoration : underline;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react'\r\nimport PostCard from './components/posts/PostCard';\r\nimport { CardsLayout, LayoutHeight } from './components/atoms/Layouts';\r\nimport Footer from './components/common/Footer';\r\nimport axios from 'axios';\r\nimport Loading from './components/common/Loading';\r\nimport Pagination from './components/posts/Pagination';\r\n\r\nexport default function PostList() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 12;\r\n  const indexOfLast = currentPage * postsPerPage;\r\n  const indexOfFirst = indexOfLast - postsPerPage;\r\n\r\n  const currentPosts = (temp) => {\r\n    let currentPosts = 0;\r\n    currentPosts = temp.slice(indexOfFirst, indexOfLast);\r\n    return currentPosts;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.get(\"/api/v2/posts\")\r\n      .then(response => { setPostList(Array.from(response.data)); })\r\n      .catch(error => console.log(error))\r\n      .then(setIsLoading(false));\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Loading />\r\n        :\r\n        <>\r\n          <LayoutHeight>\r\n            <CardsLayout>\r\n              {postList &&\r\n                <PostCard post={currentPosts(postList)} />\r\n              }\r\n              {isLoading && <Loading />}\r\n            </CardsLayout>\r\n\r\n          </LayoutHeight>\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={postList.length}\r\n            paginate={setCurrentPage} />\r\n          <Footer />\r\n        </>\r\n      }</>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n    width : 5rem;\r\n    height : 2rem;\r\n    border : none;\r\n    color : ${props => props.fontColor || 'white'};\r\n    border-radius : 5px;\r\n    font-weight : 500;\r\n    font-size: .8rem;\r\n    background : ${props => props.color || 'black'};\r\n    cursor:pointer;\r\n    &:focus{\r\n      outline:none;\r\n    }\r\n    &:hover{\r\n      opacity : 0.7;\r\n    }\r\n    @media screen and (min-width: 1024px){\r\n\r\n    }\r\n`;\r\n\r\nexport const LongButton = styled(Button)`\r\n  width : 10rem;\r\n  height : 2.5rem;\r\n`;\r\n\r\nexport const LoginButton = styled(Button)`\r\n  border-radius : 2em;\r\n  background-color:#4b4b4b;\r\n  &:hover {\r\n    background-color : black;\r\n    text-decoration : none;\r\n  }\r\n`;\r\n\r\nexport const LogoutButton = styled(LoginButton)`\r\n  background-color : #e3efe2;\r\n  color :  #3d3d3d;\r\n  font-weight : 600;\r\n  &:hover{\r\n    color : #e3efe2;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled(Button)`\r\n  border-radius : 1rem;\r\n\r\n  &:hover{\r\n    opacity : 1;\r\n    text-decoration : underline;\r\n  }\r\n`;\r\n\r\nexport const CommentButton = styled.button`\r\n  background-color : white;\r\n  border : none;\r\n  cursor : pointer;\r\n  margin-right : .45rem;\r\n  &:hover{\r\n    text-decoration : underline;\r\n  }\r\n  &:focus{\r\n    outline:none;\r\n  }\r\n`;\r\n\r\nexport const NewPostButton = styled(LogoutButton)`\r\n  margin-right : 0.5rem;\r\n`;\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { LongButton } from '../atoms/Buttons';\r\nimport { ModalBackLayout } from '../atoms/Layouts'\r\nimport axios from 'axios';\r\n\r\nconst body = document.querySelector('#root');\r\n\r\nexport default function Login(props) {\r\n  useEffect(() => {\r\n    body.setAttribute(\"style\", \"overflow: hidden;\");\r\n    return () => {\r\n      body.removeAttribute(\"style\");\r\n    }\r\n  }, [])\r\n\r\n  const googleLogin = () => {\r\n    axios.get('/oauth2/authorization/google', {\r\n      header: {\r\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        window.open()\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalBackLayout>\r\n        <ModalLayout>\r\n          <div style={{\r\n            \"width\": \"90%\",\r\n            \"display\": \"flex\",\r\n            \"justifyContent\": \"flex-end\",\r\n          }}>\r\n            <button style={{\r\n              \"backgroundColor\": \"white\",\r\n              \"border\": \"none\",\r\n            }} onClick={props.handleLoginModal}>X</button>\r\n          </div>\r\n          <GoogleButton onClick={googleLogin} color={\"#cf4332;\"}>\r\n            <i className=\"fab fa-google\"></i> Google 계정으로 로그인\r\n        </GoogleButton>\r\n          <NaverButton color={\"#27ae60\"}>\r\n            <span>N</span> naver 계정으로 로그인\r\n        </NaverButton>\r\n        </ModalLayout>\r\n      </ModalBackLayout>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst ModalLayout = styled.div`\r\n  width : 500px;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content:center;\r\n  align-items : center;\r\n  background-color : #fafafa;\r\n  box-shadow : 0 4px 8px 0;\r\n  height : 10rem;\r\n  border-radius : 10px;\r\n  z-index : 10;\r\n\r\n  @media screen and (max-width : 550px){\r\n    width : calc(100% - 2rem);\r\n  }\r\n\r\n`;\r\nconst GoogleButton = styled(LongButton)`\r\n  width : 90%;\r\n  margin : 0.5rem;\r\n`;\r\n\r\nconst NaverButton = styled(LongButton)`\r\n  width : 90%;\r\n  margin : 0.5rem;\r\n`;","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { LogoutButton, LoginButton, NewPostButton } from '../atoms/Buttons';\r\nimport { HeaderLayout, MenuLayout } from '../atoms/Layouts';\r\nimport Login from '../modal/Login';\r\nimport axios from 'axios';\r\n\r\nfunction Header(props) {\r\n  const [onLoginModal, setOnLoginModal] = useState(false);\r\n  const [isLogined, setIsLogined] = useState(false);\r\n  const [LoginUser, setLoginUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/v2/user')\r\n      .then(response => {\r\n        if (response.data === \"\") {\r\n          setIsLogined(false);\r\n        } else {\r\n          setLoginUser(response.data);\r\n          setIsLogined(true);\r\n        }\r\n      });\r\n  }, [])\r\n\r\n  const handleLoginModal = () => {\r\n    setOnLoginModal(!onLoginModal);\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    axios.get('/logout').then(response => {\r\n      window.location.href = \"/\";\r\n      alert(\"로그아웃 했습니다.\")\r\n    });\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      {onLoginModal && <Login handleLoginModal={handleLoginModal} />}\r\n      <HeaderLayout>\r\n        <Link to=\"/\" style={{ \"textDecoration\": \"none\" }}>\r\n          <Logo>\r\n            <span>Mlog</span>\r\n          </Logo>\r\n        </Link>\r\n\r\n        <Profile>\r\n          {isLogined ?\r\n            <>\r\n              <Link to=\"/api/v2/write\"><NewPostButton>새글쓰기</NewPostButton></Link>\r\n              <LogoutButton onClick={handleLogout}>로그아웃</LogoutButton>\r\n              <Link to={`/api/v2/user/${LoginUser.id}`}>\r\n                <div id=\"profile\">\r\n                  <img src={`${LoginUser.picture}`} alt=\"?\" />\r\n                </div>\r\n              </Link>\r\n            </>\r\n            :\r\n            <LoginButton onClick={handleLoginModal}>로그인</LoginButton>}\r\n\r\n\r\n\r\n        </Profile>\r\n      </HeaderLayout>\r\n      <MenuLayout>\r\n        <div>\r\n          <NavLink style={{\r\n            \"color\": \"#4b4b4b\",\r\n            \"textDecoration\": \"none\",\r\n            \"opacity\": \"0.5\",\r\n            \"margin\": \"0.5rem\"\r\n          }} to=\"/api/v2/popPosts\"><i className=\"fas fa-fire\">인기 포스트</i></NavLink>\r\n          <NavLink to=\"/\" style={{\r\n            \"color\": \"#4b4b4b\",\r\n            \"textDecoration\": \"none\",\r\n            \"opacity\": \"0.5\",\r\n            \"margin\": \"0.5rem\"\r\n          }}><i className=\"fas fa-history\">최신 포스트</i></NavLink>\r\n        </div>\r\n        <Search>\r\n\r\n          <Link to=\"/api/v2/searchedPosts\">\r\n            <button><i className=\"fas fa-search\"></i></button>\r\n          </Link>\r\n\r\n        </Search>\r\n      </MenuLayout >\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n\r\nconst Search = styled.div`\r\n  input,button {\r\n    border : none;\r\n    color : #acacac;\r\n  }\r\n  button{\r\n    cursor: pointer;\r\n    background-color : white;    \r\n  }\r\n  input:focus,button:focus{\r\n    outline : none;\r\n  }\r\n\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width : 5rem;\r\n  height : 3rem;\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items : center;\r\n  color : #3d3d3d;\r\n  span {\r\n    font-family: 'Long Cang', cursive;\r\n    font-weight : 1000;\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst Profile = styled.div`\r\nwidth: 15rem;\r\n  height : 3rem;\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items:center;\r\n  \r\n  #profile{\r\n    margin-left : 1rem;\r\n    margin-right : 0;\r\n    border-radius : 3rem;\r\n    width : 2.5rem;\r\n    height : 2.5rem;\r\n    background-color:black;\r\n    overflow : hidden;\r\n    &:hover{\r\n      opacity : 0.7;\r\n    }\r\n  }\r\n  #profile img{\r\n    width : 100%;\r\n    height :100%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleInput = styled.input`\r\n  width : 99.28%;\r\n  margin : 0 auto;\r\n  height : 3rem;\r\n  border : none;\r\n  font-size : 2rem;\r\n  font-weight : 700;\r\n  border-bottom : 4px solid #dedede;\r\n  &:focus{\r\n    outline : none;\r\n  }\r\n  &::placeholder{\r\n    opacity : 0.7;\r\n  }\r\n`;\r\n\r\nexport const FormTextarea = styled.textarea`\r\n  white-space : pre;\r\n  height : ${props => props.height};\r\n  resize: none;\r\n  width: 99.28%;\r\n  margin: 2rem 0 auto;\r\n  border: none;\r\n  font-size : 1.2rem;\r\n  overflow-x : hidden;\r\n\r\n  &:focus{\r\n    outline : none;\r\n  }\r\n`;\r\n\r\nexport const CommentTextarea = styled.textarea`\r\n  white-space : pre;\r\n  height : 7rem;\r\n  resize : vertical;\r\n  width : 98%;\r\n  border : none;\r\n  &:focus{\r\n    outline : none;\r\n  }\r\n`;","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nexport default function TempCard(props) {\r\n\r\n  useEffect(() => {\r\n    props.reRenderTempPostDelete();\r\n  }, [props])\r\n\r\n  const deleteTempPost = () => {\r\n    return axios.delete(`/api/v2/posts/${props.temp.id}`);\r\n  }\r\n\r\n  const handleDeleteTempPost = () => {\r\n    deleteTempPost()\r\n      .then(response => {\r\n        alert(\"임시 저장글이 삭제되었습니다.\");\r\n        props.reRenderTempPostDelete();\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <CardLayout>\r\n      <h3 style={{\r\n        \"paddingLeft\": \"1rem\",\r\n        \"wordBreak\": \"break-all\"\r\n      }}\r\n        onClick={props.loadTempPosts({\r\n          title: props.temp.title,\r\n          content: props.temp.content\r\n        })}\r\n      >{props.temp.title}</h3>\r\n      <XButton onClick={handleDeleteTempPost}>X</XButton>\r\n    </CardLayout>\r\n  )\r\n}\r\n\r\nconst CardLayout = styled.div`\r\n  width : 80%;\r\n  margin : 0.2rem;\r\n  height : 5rem;\r\n  box-shadow : 0px 2px 10px 0px;\r\n  display : flex;\r\n  flex-direction : row;\r\n  align-items : center;\r\n  justify-content : space-between;\r\n`;\r\n\r\nconst XButton = styled.button`\r\n  margin-right : 0.5rem;\r\n  font-size : 1rem;\r\n  font-weight: 800;\r\n  background-color : #fafafa;\r\n  border : none;\r\n  &:hover{\r\n    cursor : pointer;\r\n  }\r\n  &:focus{\r\n    outline : none;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PostLayout, ModalBackLayout } from './components/atoms/Layouts';\r\nimport { TitleInput, FormTextarea } from './components/atoms/Inputs';\r\nimport { FormButton, LongButton } from './components/atoms/Buttons';\r\nimport TempCard from './components/modal/TempCard';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function PostForm(props) {\r\n\r\n  const windowHeight = (window.innerHeight - 300) + 'px';\r\n  const [onCategory, setOnCategory] = useState(false);\r\n  const [onTempPost, setOnTempPost] = useState(false);\r\n  const [title, setTitle] = useState(props.title);\r\n  const [content, setContent] = useState(props.content);\r\n  const [image, setImage] = useState({\r\n    file: null,\r\n    fileName: \"\"\r\n  });\r\n  const [category, setCategory] = useState(\"\");\r\n  const [userCategories, setUserCategories] = useState([]);\r\n  const [TempData, setTempData] = useState({});\r\n  const [tempPosts, setTempPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('write')\r\n      .then(response => {\r\n        setUserCategories(Array.from(response.data));\r\n      })\r\n  }, [props])\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage({\r\n      file: e.target.files[0],\r\n      fileName: e.target.value\r\n    })\r\n  }\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const loadTempPosts = (callTemp) => {\r\n    setTitle(callTemp.title);\r\n    setContent(callTemp.content);\r\n  }\r\n\r\n  const addPost = () => {\r\n    const url = '/api/v2/write';\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('content', content);\r\n    formData.append('image', image.file, image.fileName);\r\n    formData.append('categories', category);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    return axios.post(url, formData, config);\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    addPost().then((response) => {\r\n      alert('게시글 등록이 완료되었습니다.');\r\n      props.history.push(`/api/v2/posts/${response.data}`)\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n\r\n  const onModalCategory = () => {\r\n    setOnCategory(!onCategory);\r\n  }\r\n\r\n  const onModalTempPost = () => {\r\n    setOnTempPost(!onTempPost);\r\n  }\r\n\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v2/write/temp\")\r\n      .then(response => setTempPosts(response.data));\r\n  }, [])\r\n\r\n  const addTempPost = () => {\r\n    const url = \"/api/v2/write/temp\";\r\n    setTempData({\r\n      title: title,\r\n      content: content\r\n    })\r\n    console.log(TempData)\r\n    return axios.post(url, TempData);\r\n  }\r\n\r\n  const submitTempPost = (e) => {\r\n    if (title && content) {\r\n      addTempPost()\r\n        .then(response => {\r\n          setTempPosts(tempPosts.concat(response));\r\n          alert(\"현재 글이 임시저장 되었습니다.\");\r\n        })\r\n        .catch(error => console.log(error));\r\n    } else {\r\n      alert(\"제목과 내용을 입력해야 임시저장이 가능합니다.\");\r\n    }\r\n  }\r\n\r\n  const reRenderTempPostDelete = () => {\r\n    const url = \"/api/v2/write/temp\";\r\n    axios.get(url)\r\n      .then(response => setTempPosts(response.data))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PostLayout>\r\n        <TitleInput name=\"title\" onChange={handleTitleChange} value={title} placeholder=\"제목을 입력하세요.\" />\r\n        <FormTextarea wrap=\"physical\" name=\"content\" onChange={handleContentChange} value={content} placeholder=\"내용을 입력하세요.\" height={windowHeight}></FormTextarea>\r\n      </PostLayout>\r\n      <FormTools>\r\n        <div>\r\n          <FormButton onClick={props.history.goBack}><i className=\"fas fa-arrow-left\"></i> 나가기</FormButton>\r\n        </div>\r\n        <div>\r\n          <FormButton>미리보기</FormButton>\r\n          <FormButton onClick={onModalTempPost}>임시저장</FormButton>\r\n          <FormButton onClick={onModalCategory}>작성완료</FormButton>\r\n        </div>\r\n      </FormTools>\r\n      {/* 카테고리 */}\r\n      {onCategory &&\r\n        <ModalBackLayout>\r\n          <ModalLayout>\r\n            <p>\r\n              <span>게시글 발행</span>\r\n              <button onClick={onModalCategory}>X</button>\r\n            </p>\r\n            <div>\r\n              <label htmlFor=\"thumbnail\">썸네일</label>\r\n              <input onChange={handleFileChange}\r\n                image={image.file}\r\n                value={image.fileName}\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                type=\"file\"\r\n                id=\"thumbnail\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category\">시리즈</label>\r\n              <select\r\n                value={category}\r\n                onChange={handleCategoryChange}\r\n                name=\"category\"\r\n                id=\"category\">\r\n                <option value=\"일반\">선택하지 않음</option>\r\n                {userCategories &&\r\n                  userCategories.map(category => {\r\n                    return <option value={category.id} key={category.id}>{category.name}</option>\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <SubmitButton onClick={handleFormSubmit}>글을 발행합니다.</SubmitButton>\r\n          </ModalLayout>\r\n        </ModalBackLayout>}\r\n      {/* 임시저장 */}\r\n      {onTempPost &&\r\n        <ModalBackLayout>\r\n          <TempModalLayout>\r\n            <p><span>임시 저장</span><button onClick={onModalTempPost}>X</button></p>\r\n            {tempPosts ?\r\n              tempPosts.map(temp => {\r\n                return (\r\n                  <TempCard\r\n                    loadTempPosts={loadTempPosts}\r\n                    reRenderTempPostDelete={reRenderTempPostDelete}\r\n                    temp={temp}\r\n                    key={temp.id} />)\r\n              })\r\n              : <h3>임시 저장글이 없습니다.</h3>}\r\n            <SubmitTempButton style={{ \"marginTop\": \"1rem\" }} onClick={submitTempPost}>현재 글 임시 저장</SubmitTempButton>\r\n          </TempModalLayout>\r\n        </ModalBackLayout>}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst FormTools = styled.div`\r\nwidth: 100%;\r\nposition: absolute;\r\nheight: 4rem;\r\nbottom: 0;\r\ndisplay:flex;\r\njustify-content: space-evenly;\r\nalign-items : center;\r\n\r\nbutton {\r\n  margin : 0.5rem;\r\n}\r\n`;\r\n\r\nconst ModalLayout = styled.div`\r\n  width : 30rem;\r\n  padding : 1rem;\r\n  background-color : #fafafa;\r\n  display : flex;\r\n  flex-direction : column;\r\n  border-radius : 10px;\r\n  box-shadow : 0px 4px 6px 0px;\r\n\r\n  p{\r\n    display : flex;\r\n    justify-content : space-between;\r\n  }\r\n\r\n  p span{\r\n    font-size : 1.5rem;\r\n    font-weight : 600;\r\n  }\r\n\r\n  p button{\r\n    background-color : #fafafa;\r\n    border : none;\r\n    font-size:1.5rem;\r\n\r\n    &:hover{\r\n      cursor:pointer;\r\n    }\r\n    &:focus{\r\n      outline : none;\r\n    }\r\n  }\r\n\r\n  div{\r\n    margin : 1rem 1rem;\r\n    overflow:hidden;\r\n  }  \r\n\r\n  div label {\r\n    padding : 0.5rem;\r\n    background-color : black;\r\n    color : white;\r\n    margin-right : 0.5rem;\r\n  }\r\n  div input[type=\"file\"] {\r\n    width : 83.5%;\r\n    height : 2rem;\r\n  }\r\n\r\n  #file-upload-button{\r\n    height : 2rem;\r\n  }\r\n  \r\n  div select {\r\n    width : 83.5%;\r\n    height : 2rem;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled(LongButton)`\r\n  width : 100%;\r\n`;\r\n\r\nconst TempModalLayout = styled.div`\r\n  width : 500px;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content:center;\r\n  align-items : center;\r\n  background-color : #fafafa;\r\n  box-shadow : 0 4px 8px 0;\r\n  border-radius : 10px;\r\n\r\n  p{\r\n    width : 90%;\r\n    display :flex;\r\n    justify-content : space-between;\r\n  }\r\n\r\n  p span{\r\n    font-size : 1.3rem;\r\n  }\r\n  p button{\r\n    background-color : #fafafa;\r\n    border : none;\r\n    font-size:1.3rem;\r\n\r\n    &:hover{\r\n      cursor:pointer;\r\n    }\r\n    &:focus{\r\n      outline : none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width : 550px){\r\n    width : calc(100% - 2rem);\r\n  }\r\n\r\n`;\r\n\r\nconst SubmitTempButton = styled(LongButton)`\r\nwidth : 100%;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { CommentTextarea } from '../atoms/Inputs';\r\nimport { CommentButton, LongButton } from '../atoms/Buttons';\r\nimport axios from 'axios';\r\n\r\nexport default function SingleComment(props) {\r\n\r\n  const [modifyMode, setModifyMode] = useState(false);\r\n  const [onReplyTo, setOnReplyTo] = useState(false);\r\n  const [ReplyBody, setReplyBody] = useState(\"\");\r\n  const [EditCommentBody, setEditCommentBody] = useState(props.comment.body);\r\n  const [valReplyBody, setvalReplyBody] = useState(false);\r\n\r\n  const handleModifyMode = () => {\r\n    setModifyMode(!modifyMode);\r\n  }\r\n\r\n  const handleReplyTo = () => {\r\n    setOnReplyTo(!onReplyTo);\r\n  }\r\n\r\n  const handleCommentBodyChange = (e) => {\r\n    setEditCommentBody(e.currentTarget.value);\r\n  }\r\n\r\n  const handleReplyBodyChange = (e) => {\r\n    setReplyBody(e.currentTarget.value);\r\n    setvalReplyBody(true);\r\n  }\r\n\r\n  const url = `/api/v2/posts/${props.postId}/comments/${props.comment.id}`;\r\n\r\n  const submitReply = () => {\r\n    if (valReplyBody && ReplyBody !== '') {\r\n      const replyInfo = {\r\n        body: ReplyBody\r\n      }\r\n      axios.post(url, replyInfo)\r\n        .then(response => {\r\n          props.reRenderCommentsAdd(response.data);\r\n          alert(\"댓글 등록 성공\");\r\n          setReplyBody(\"\");\r\n          handleReplyTo();\r\n        })\r\n        .catch(error => console.log(error));\r\n    } else {\r\n      alert(\"댓글을 입력해주세요.\")\r\n    }\r\n  }\r\n\r\n  const submitEditComment = () => {\r\n    const exceptedPost = {\r\n      body: EditCommentBody\r\n    }\r\n\r\n    axios.put(url, exceptedPost)\r\n      .then(response => {\r\n        alert(\"댓글이 수정되었습니다.\");\r\n        props.reRenderCommentsUpdate();\r\n        handleModifyMode();\r\n      }).catch(error => console.log(error));\r\n  }\r\n\r\n  const deleteComment = () => {\r\n    if (window.confirm(\"댓글을 삭제하시겠습니까?\")) {\r\n      axios.delete(url)\r\n        .then(response => {\r\n          props.reRenderCommentsUpdate();\r\n          alert(\"댓글을 삭제했습니다.\")\r\n        }).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {modifyMode ?\r\n        <div className=\"commentForm\"\r\n          style={{\r\n            \"width\": \"99%\",\r\n            \"display\": \"flex\",\r\n            \"flexDirection\": \"column\",\r\n            \"alignItems\": \"center\",\r\n            \"justifyContent\": \"center\",\r\n            \"margin\": \"2rem auto\",\r\n            \"boxShadow\": \"0 2px 6px 0px\",\r\n          }}>\r\n          <CommentTextarea\r\n            onChange={handleCommentBodyChange}\r\n            value={EditCommentBody}\r\n            defaultValue={props.comment.body}\r\n          />\r\n          <div style={{\r\n            \"width\": \"100%\",\r\n            \"display\": \"flex\",\r\n          }}>\r\n            <LongButton\r\n              style={{\r\n                \"width\": \"50%\",\r\n                \"fontSize\": \"1rem\",\r\n                \"borderRadius\": \"0\",\r\n              }}\r\n              onClick={submitEditComment}\r\n            >수정완료</LongButton>\r\n            <LongButton\r\n              style={{\r\n                \"width\": \"50%\",\r\n                \"fontSize\": \"1rem\",\r\n                \"borderRadius\": \"0\",\r\n              }}\r\n              onClick={handleModifyMode}\r\n            >수정취소</LongButton>\r\n          </div>\r\n        </div>\r\n        :\r\n        <CommentCard>\r\n          <CardAuthor>\r\n            <Link to=\"/\">\r\n              <div id=\"author\">\r\n                <div id=\"profile\"><img src={props.comment.user.picture} alt={props.comment.user.name} /></div>\r\n                <div id=\"userInfo\">\r\n                  <span style={{ \"fontSize\": \"1rem\" }}>{props.comment.user.name}</span>\r\n                  <span style={{ \"fontSize\": \"0.5rem\" }}>{props.comment.modifiedDate.substr(0, 10)}</span>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <CommentTools>\r\n              {props.comment.user.id === parseInt(props.SessionUser?.id) &&\r\n                <>\r\n                  <CommentButton onClick={setModifyMode}>수정</CommentButton>\r\n                  <CommentButton onClick={deleteComment}>삭제</CommentButton>\r\n                </>\r\n              }\r\n              <CommentButton onClick={handleReplyTo}>ReplyTo</CommentButton>\r\n            </CommentTools>\r\n          </CardAuthor>\r\n          <div className=\"commentBody\"\r\n            style={{\r\n              \"margin\": \"1.5rem 0.5rem\"\r\n              , \"wordBreak\": \"break-all\"\r\n            }}>\r\n            {props.comment.parents &&\r\n              <>\r\n                <span style={{\r\n                  \"backgroundColor\": \"#ffeaa7\"\r\n\r\n                }}>@{props.comment.parents.user.name}</span><br />\r\n              </>}\r\n            {props.comment.body}\r\n          </div>\r\n        </CommentCard>\r\n      }\r\n      {onReplyTo &&\r\n        <div className=\"commentForm\"\r\n          style={{\r\n            \"width\": \"99%\",\r\n            \"display\": \"flex\",\r\n            \"flexDirection\": \"column\",\r\n            \"alignItems\": \"center\",\r\n            \"justifyContent\": \"center\",\r\n            \"margin\": \"1rem auto\",\r\n            \"boxShadow\": \"0 2px 6px 0px\"\r\n          }}>\r\n          <CommentTextarea\r\n            name=\"body\"\r\n            spellCheck=\"false\"\r\n            value={ReplyBody}\r\n            onChange={handleReplyBodyChange}\r\n            placeholder={!valReplyBody ? \"댓글을 작성해주세요\" : \"\"}\r\n          />\r\n          <LongButton\r\n            style={{\r\n              \"width\": \"100%\",\r\n              \"fontSize\": \"1rem\",\r\n              \"borderRadius\": \"0\",\r\n            }}\r\n            onClick={submitReply}\r\n          >\r\n            댓글등록</LongButton>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst CommentCard = styled.div`\r\n  width : 99%;\r\n  margin : 0 auto;\r\n  box-shadow : 0px 2px 6px 0px;\r\n  margin-bottom : 1.5rem;\r\n`;\r\nconst CardAuthor = styled.div`\r\n  width : 98%;\r\n  margin : .5rem .5rem;\r\n  display : flex;\r\n  flex-direction : row;\r\n  justify-content :space-between;\r\n  align-items:center;\r\n\r\n  a{\r\n    text-decoration:none;\r\n    color:black;\r\n  }\r\n\r\n  #author{\r\n            display : flex;\r\n    align-items : center;\r\n    font-size : .8rem;\r\n\r\n  }\r\n\r\n  #profile{\r\n            width : 3rem;\r\n    height : 3rem;\r\n    border-radius: 3rem;\r\n    background-color : deepskyblue;\r\n    overflow : hidden;\r\n  }\r\n\r\n  #profile img {\r\n            width : 100%;\r\n    height : 100%;\r\n  }\r\n\r\n  #userInfo{\r\n    margin-left : 0.3rem;\r\n    width : 4rem;\r\n    display : flex;\r\n    flex-direction:column;\r\n  }\r\n  #author:hover{\r\n    text-decoration:underline;\r\n  }\r\n`;\r\n\r\nconst CommentTools = styled.div`\r\n  width : 90%;\r\n  font-size : 0.9rem;\r\n  display : flex;\r\n  justify-content:flex-start;\r\n  margin-left : 1rem;\r\n`;","import React from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nexport default function ReplyComment(props) {\r\n  return (\r\n    <div>\r\n      {props.comments &&\r\n        props.comments.map((comment, index) => {\r\n          if (comment.parents && comment.parents.id === props.parentCommentId) {\r\n            return (\r\n              <>\r\n                <SingleComment\r\n                  reRenderCommentsAdd={props.reRenderCommentsAdd}\r\n                  reRenderCommentUpdate={props.reRenderCommentUpdate}\r\n                  comment={comment}\r\n                  key={comment.id}\r\n                  SessionUser={props.SessionUser}\r\n                  postId={props.postId} />\r\n\r\n                <ReplyComment\r\n                  reRenderCommentsAdd={props.reRenderCommentsAdd}\r\n                  reRenderCommentUpdate={props.reRenderCommentUpdate}\r\n                  parentCommentId={comment.id}\r\n                  SessionUser={props.SessionUser}\r\n                  comments={props.comments}\r\n                  postId={props.postId} />\r\n              </>\r\n            )\r\n          }\r\n          return <div key={comment.id}></div>\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport SingleComment from './SingleComment'\r\nimport { CommentLayout } from '../atoms/Layouts';\r\nimport { CommentTextarea } from '../atoms/Inputs';\r\nimport { LongButton } from '../atoms/Buttons';\r\nimport axios from 'axios';\r\nimport ReplyComment from './ReplyComment';\r\n\r\n\r\nexport default function Comments(props) {\r\n\r\n  const [commentBody, setCommentBody] = useState(\"\");\r\n  const [valBody, setvalBody] = useState(false);\r\n\r\n\r\n  const addComments = (e) => {\r\n    const url = `/api/v2/posts/${props.postId}/comments`;\r\n    const cmtData = {\r\n      body: commentBody\r\n    }\r\n    return axios.post(url, cmtData);\r\n  }\r\n\r\n  const handleCommentChange = (e) => {\r\n    setCommentBody(e.currentTarget.value);\r\n    setvalBody(true);\r\n  }\r\n\r\n  const handleCommentSubmit = () => {\r\n    if (valBody) {\r\n      addComments()\r\n        .then(response => {\r\n          props.reRenderCommentsAdd(response.data);\r\n          alert(\"댓글 등록이 완료되었습니다.\");\r\n          setCommentBody(\"\");\r\n        })\r\n        .catch(error => console.log(error));\r\n    } else {\r\n      alert(\"댓글을 입력해주세요\");\r\n    }\r\n  }\r\n  return (\r\n    <CommentLayout>\r\n      <p style={{ \"fontSize\": \"1.3rem\", \"fontWeight\": \"600\" }}>\r\n        {/* {commentsCount}개의 댓글 */}\r\n\r\n      </p>\r\n      {props.comments &&\r\n        props.comments.map((comment, index) => {\r\n          if (!comment.parents) {\r\n            return (\r\n              <>\r\n                <SingleComment\r\n                  reRenderCommentsAdd={props.reRenderCommentsAdd}\r\n                  reRenderCommentsUpdate={props.reRenderCommentsUpdate}\r\n                  comment={comment}\r\n                  key={comment.id}\r\n                  postId={props.postId}\r\n                  SessionUser={props.SessionUser}\r\n                />\r\n\r\n                <ReplyComment\r\n                  reRenderCommentsAdd={props.reRenderCommentsAdd}\r\n                  reRenderCommentsUpdate={props.reRenderCommentsUpdate}\r\n                  parentCommentId={comment.id}\r\n                  comments={props.comments}\r\n                  postId={props.postId}\r\n                  SessionUser={props.SessionUser}\r\n                />\r\n              </>)\r\n          } return <div></div>\r\n        })}\r\n\r\n      <div className=\"commentForm\"\r\n        style={{\r\n          \"width\": \"99%\",\r\n          \"display\": \"flex\",\r\n          \"flexDirection\": \"column\",\r\n          \"alignItems\": \"center\",\r\n          \"justifyContent\": \"center\",\r\n          \"margin\": \"2rem auto\",\r\n          \"boxShadow\": \"0 2px 6px 0px\"\r\n        }}>\r\n        <CommentTextarea\r\n          name=\"body\"\r\n          spellCheck=\"false\"\r\n          value={commentBody}\r\n          onChange={handleCommentChange}\r\n          placeholder={valBody ? \"\" : \"댓글 내용을 입력해주세요.\"}\r\n        />\r\n        <LongButton\r\n          style={{\r\n            \"width\": \"100%\",\r\n            \"fontSize\": \"1rem\",\r\n            \"borderRadius\": \"0\",\r\n          }}\r\n          onClick={handleCommentSubmit}\r\n        >\r\n          댓글등록</LongButton>\r\n      </div>\r\n\r\n    </CommentLayout>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PostTitle(props) {\r\n  return (\r\n    <div style={{\r\n      \"display\": \"flex\",\r\n      \"flexDirection\": \"column\",\r\n      \"flexWrap\": \"wrap\"\r\n    }}>\r\n      <span style={{\r\n        \"fontSize\": \"1.2rem\",\r\n        \"fontWeight\": \"500\",\r\n        \"wordBreak\": \"break-all\"\r\n      }}>{props.posts.categories ? props.posts.categories : \"일반\"}</span>\r\n      <span style={{\r\n        \"fontSize\": \"1.8rem\",\r\n        \"fontWeight\": \"700\",\r\n        \"wordBreak\": \"break-all\"\r\n      }}>{props.posts.title}</span>\r\n      <span style={{\r\n        \"fontSize\": \"0.8rem\",\r\n        \"color\": \"grey\"\r\n      }}>{props.posts.createdDate} (updated : {props.posts.modifiedDate})</span>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { PostViewLayout, LayoutHeight, PostLayout } from './components/atoms/Layouts';\r\nimport { TitleInput, FormTextarea } from './components/atoms/Inputs';\r\nimport { Button, FormButton } from './components/atoms/Buttons';\r\nimport Footer from './components/common/Footer';\r\nimport Comment from './components/comments/Comments';\r\nimport axios from 'axios';\r\nimport Loading from './components/common/Loading';\r\nimport PostTitle from './components/posts/PostTitle';\r\n\r\nexport default function PostView(props) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [modifyMode, setModifyMode] = useState(false);\r\n\r\n  const [posts, setPosts] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const windowHeight = (window.innerHeight - 300) + 'px';\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [picture, setPicture] = useState(\"\")\r\n  const [about, setAbout] = useState(\"소개가 없습니다.\");\r\n  const [valTitle, setvalTitle] = useState(false);\r\n  const [valContent, setvalContent] = useState(false);\r\n  const [SessionUser, setSessionUser] = useState(null);\r\n  const [LikeVal, setLikeVal] = useState(false);\r\n  const [LikeCount, setLikeCount] = useState(0);\r\n  const pUrl = `${props.match.params.postId}`;\r\n  const cUrl = `${props.match.params.postId}/comments`;\r\n\r\n  const handleModifyMode = () => {\r\n    setModifyMode(!modifyMode);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/v2/user')\r\n      .then(response => {\r\n        setSessionUser(response.data);\r\n      }).catch(error => console.log(error));\r\n\r\n    axios.get(pUrl)\r\n      .then(response => {\r\n        setPosts(response.data);\r\n        setTitle(response.data.title);\r\n        setContent(response.data.content);\r\n        setName(response.data.user.name);\r\n        setPicture(response.data.user.picture)\r\n        setAbout(response.data.user.about);\r\n        setLikeCount(response.data.likeCount);\r\n        setLikeVal(response.data.like_val);\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n    axios.get(cUrl)\r\n      .then(response => setComments(response.data))\r\n      .catch(error => console.log(error));\r\n\r\n\r\n    setIsLoading(false);\r\n  }, [pUrl, cUrl])\r\n\r\n  const reRenderCommentsAdd = (newComment) => {\r\n    setComments(comments.concat(newComment));\r\n  }\r\n\r\n  const reRenderCommentsUpdate = () => {\r\n    axios.get(cUrl)\r\n      .then(response => { setComments(response.data) })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n\r\n  const handleDeletePost = () => {\r\n    window.confirm(\"포스트를 삭제하시겠습니까?\");\r\n    axios.delete(pUrl).then(alert(\"포스트가 삭제 되었습니다.\"));\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n    setvalTitle(true);\r\n  }\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n    setvalContent(true);\r\n  }\r\n\r\n\r\n  const submitEditPost = () => {\r\n    if (valTitle && valContent) {\r\n      const exceptedPost = {\r\n        title: title,\r\n        content: content\r\n      }\r\n      axios.put(pUrl, exceptedPost)\r\n        .then(response => {\r\n          alert(\"수정이 완료되었습니다.\");\r\n          axios.get(pUrl).then(response => {\r\n            setPosts(response.data);\r\n            setTitle(response.data.title);\r\n            setContent(response.data.content);\r\n          })\r\n          props.history.push(props.location.pathname);\r\n          setModifyMode(false);\r\n        }).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  const submitLike = () => {\r\n    axios.get(`${props.match.params.postId}/like`)\r\n      .then(response => {\r\n        setLikeVal(true);\r\n        setLikeCount(LikeCount + 1);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n  const submitDislike = () => {\r\n    axios.get(`${props.match.params.postId}/disLike`)\r\n      .then(response => {\r\n        setLikeVal(false);\r\n        setLikeCount(LikeCount - 1);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Loading /> : <>\r\n        {\r\n          modifyMode ?\r\n            <>\r\n              <PostLayout>\r\n                <TitleInput name=\"title\" onChange={handleTitleChange} value={title} placeholder=\"제목을 입력하세요.\" />\r\n                <FormTextarea name=\"content\" onChange={handleContentChange} value={content} placeholder=\"내용을 입력하세요.\" height={windowHeight}></FormTextarea>\r\n              </PostLayout>\r\n              <FormTools>\r\n                <div>\r\n                  <FormButton onClick={handleModifyMode}><i className=\"fas fa-arrow-left\"></i> 나가기</FormButton>\r\n                </div>\r\n                <div>\r\n                  <FormButton>미리보기</FormButton>\r\n                  <FormButton onClick={submitEditPost}>수정완료</FormButton>\r\n                </div>\r\n              </FormTools>\r\n            </>\r\n            :\r\n            <>\r\n              <LayoutHeight>\r\n                <PostViewLayout>\r\n                  <PostTitle posts={posts} />\r\n                  <div style={{\r\n                    \"display\": \"flex\",\r\n                    \"marginTop\": \"3rem\",\r\n                    \"marginBottom\": \"3rem\"\r\n                  }}>\r\n                    <UserImg>\r\n                      <img src={picture} alt=\"userProfile\"></img>\r\n                    </UserImg>\r\n                    <UserProfile>\r\n                      <span style={{\r\n                        \"fontSize\": \"1.2rem\",\r\n                        \"fontWeight\": \"800\",\r\n                        \"wordBreak\": \"break-all\",\r\n                        \"marginLeft\": \"0.3rem\"\r\n                      }}>\r\n                        {name}\r\n                      </span>\r\n                      <p style={{\r\n                        \"fontSize\": \"0.8rem\",\r\n                        \"color\": \"grey\",\r\n                        \"wordBreak\": \"break-all\"\r\n                      }}>\r\n                        {about === null ? \"소개가 없습니다.\" : about}\r\n                      </p>\r\n                    </UserProfile>\r\n                  </div>\r\n                  <div className=\"content\" style={{\r\n                    \"wordBreak\": \"break-all\",\r\n                    \"whiteSpace\": \"pre-line\"\r\n                  }}>\r\n                    {posts.content}\r\n                  </div>\r\n                  <div className=\"like\" style={{\r\n                    \"display\": \"flex\",\r\n                    \"justifyContent\": \"center\",\r\n                    \"alignItems\": \"center\",\r\n                    \"marginTop\": \"2rem\",\r\n                    \"marginBottom\": \"1rem\"\r\n                  }}>\r\n                    {\r\n                      LikeVal ?\r\n                        <Button\r\n                          color=\"black\"\r\n                          onClick={submitDislike}\r\n                        >\r\n                          <i className=\"far fa-thumbs-up\"></i> {LikeCount}\r\n                        </Button>\r\n                        :\r\n                        <Button\r\n                          color=\"grey\"\r\n                          onClick={submitLike}>\r\n                          <i className=\"far fa-thumbs-up\"></i> {LikeCount}\r\n                        </Button>\r\n                    }\r\n\r\n\r\n                  </div>\r\n                  {SessionUser && SessionUser?.id === posts.user?.id &&\r\n                    <AuthorTool>\r\n                      <Button style={{ \"marginRight\": \"1rem\" }}\r\n                        onClick={handleModifyMode}\r\n                      >수정하기</Button>\r\n                      <Button onClick={handleDeletePost}>삭제하기</Button>\r\n                    </AuthorTool>\r\n                  }\r\n                  <Comment\r\n                    reRenderCommentsAdd={reRenderCommentsAdd}\r\n                    reRenderCommentsUpdate={reRenderCommentsUpdate}\r\n                    comments={comments}\r\n                    postId={props.match.params.postId}\r\n                    SessionUser={SessionUser}\r\n                  />\r\n                </PostViewLayout>\r\n              </LayoutHeight>\r\n              <Footer />\r\n            </>\r\n        }\r\n      </>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst AuthorTool = styled.div`\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items:center;\r\n  margin : 1rem 0rem;\r\n  padding : 2rem 0rem;\r\n  border-top : 1px solid skyblue;\r\n  border-bottom : 1px solid skyblue;\r\n`;\r\n\r\nconst UserProfile = styled.div`\r\n  width : 50%;\r\n  height : 8rem;\r\n  overflow: hidden;\r\n  @media screen and (max-width:990px){\r\n    height : 5rem;\r\n    p{\r\n    margin : 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.div`\r\nmargin-right : 2rem;\r\n  width : 16%;\r\n  height : 8rem;\r\n  border-radius : 8rem;\r\n  overflow : hidden;\r\n  img {\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    width : 5rem;\r\n    height : 5rem;\r\n    img{\r\n      width : 200%;\r\n      height : 200%;\r\n      margin : -50%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormTools = styled.div`\r\nwidth: 100%;\r\nposition: absolute;\r\nheight: 4rem;\r\nbottom: 0;\r\ndisplay:flex;\r\njustify-content: space-evenly;\r\nalign-items : center;\r\n\r\nbutton {\r\n  margin : 0.5rem;\r\n}\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport default function UserPostCard(props) {\r\n  return (\r\n    <CardLayout>\r\n      <div id=\"img\">\r\n        <img src={props.post.imageUrl} alt={props.post.title}></img>\r\n      </div>\r\n      <h2 style={{\r\n        \"textDecoration\": \"none\",\r\n        \"color\": \"black\",\r\n      }}>{props.post.title}</h2>\r\n      <span style={{\r\n        \"color\": \"grey\",\r\n      }}>{props.post.content}</span>\r\n      <div style={{\r\n        \"display\": \"flex\",\r\n        \"justifyContent\": \"space-between\",\r\n        \"fontSize\": \"0.8rem\",\r\n      }}>\r\n        <p style={{\r\n          \"color\": \"black\"\r\n        }}>{props.post.modifiedDate.substr(0, 10)}</p>\r\n        <p style={{\r\n          \"color\": \"grey\"\r\n        }}><i className=\"far fa-thumbs-up\"></i>{props.post.likeCount}</p>\r\n      </div>\r\n    </CardLayout>\r\n  )\r\n}\r\n\r\nconst CardLayout = styled.div`\r\n  width : 70%;\r\n  height : 30rem;\r\n  margin : 2rem auto;\r\n  border-bottom : 1px solid grey;\r\n  word-break : break-all;\r\n  overflow : hidden;\r\n  .userPostCard{\r\n    text-decoration:none;\r\n  }\r\n\r\n  #img{\r\n    width : 100%;\r\n    height : 65%;\r\n    overflow : hidden;\r\n  }\r\n\r\n  #img img{\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n\r\n  @media screen and (max-width : 768px){\r\n    height : 25rem;\r\n\r\n    #img{\r\n      width : 100%;\r\n      height : 50%;\r\n    }\r\n  }\r\n`;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport UserPostCard from './UserPostCard';\r\nimport axios from 'axios';\r\nimport Loading from '../common/Loading';\r\n\r\nexport default function UserPost(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  useEffect(() => {\r\n\r\n    axios.get(props.location.pathname)\r\n      .then(response => {\r\n        setPosts(response.data)\r\n      })\r\n      .catch(error => console.log(error))\r\n      .then(setisLoading(false));\r\n  }, [props.location.pathname])\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Loading /> :\r\n        <>\r\n          {\r\n            posts.length === 0 ?\r\n              <div style={{\r\n                \"textAlign\": \"center\",\r\n                \"marginTop\": \"2rem\"\r\n              }}>포스트가 존재하지 않습니다.</div>\r\n              :\r\n              posts.map((post) => {\r\n                return (\r\n                  <>\r\n                    <a style={{ \"textDecoration\": \"none\" }} href={`/api/v2/posts/${post.id}`}>\r\n                      <UserPostCard post={post} key={post.id} />\r\n                    </a></>)\r\n              })\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function UserCategoryCard(props) {\r\n  return (\r\n    <CardLayout>\r\n      <Link style={{ \"textDecoration\": \"none\", \"backgroundColor\": \"transparent\" }}\r\n        to=\"/user/\">\r\n        <h2 style={{\r\n          \"zIndex\": \"1\",\r\n          \"left\": \"41%\",\r\n          \"top\": \"100%\",\r\n          \"display\": \"flex\",\r\n          \"flexDirection\": \"column\",\r\n          \"alignItems\": \"center\",\r\n          \"color\": \"black\",\r\n        }}>\r\n          <span>\r\n            <i className=\"fas fa-chevron-left\"></i>\r\n            {props.category.name} 시리즈\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n          </span>\r\n          <span style={{\r\n            \"fontSize\": \"1.2rem\",\r\n          }}>{props.category.modifiedDate.substr(0, 10)}</span>\r\n        </h2>\r\n      </Link>\r\n    </CardLayout>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst CardLayout = styled.div`\r\n  width : 100%;\r\n  height : 300px;\r\n  overflow: hidden;\r\n  background-color : white;\r\n  border-bottom : 1px solid #000000;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content : center;\r\n  align-items : center;\r\n  opacity : 0.5;\r\n  \r\n  &:hover{\r\n    opacity : 1;\r\n    text-decoration : underline;\r\n  }\r\n`;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport CategoryCard from './UserCategoryCard';\r\nimport axios from 'axios';\r\nexport default function UserCategory(props) {\r\n  const [Categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(props.location.pathname)\r\n      .then(response => {\r\n        setCategories(Array.from(response.data));\r\n      })\r\n  }, [props])\r\n\r\n  return (\r\n    <>\r\n      {Categories.length === 0 ?\r\n        <div style={{\r\n          \"textAlign\": \"center\",\r\n          \"marginTop\": \"2rem\"\r\n        }}>시리즈가 존재하지 않습니다</div> :\r\n        <>\r\n          {\r\n            Categories.map(category => {\r\n              return <CategoryCard category={category} key={category.id} />\r\n            })\r\n          }\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LongButton } from '../atoms/Buttons';\r\n\r\nexport default function UserAbout(props) {\r\n  const [onModifyMode, setOnModifyMode] = useState(false);\r\n  const [about, setAbout] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(props.location.pathname)\r\n      .then(response => setAbout(response.data.about))\r\n  }, [props.location.pathname])\r\n\r\n  const handleAboutChange = (e) => {\r\n    setAbout(e.currentTarget.value);\r\n  }\r\n\r\n  const submitEditAbout = (e) => {\r\n    const editData = {\r\n      about: about\r\n    }\r\n\r\n    axios.put(props.location.pathname, editData).then(() => {\r\n      alert(\"수정이 완료되었습니다.\");\r\n      setOnModifyMode(!onModifyMode);\r\n\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {onModifyMode ?\r\n        <div style={{\r\n          \"display\": \"flex\",\r\n          \"flexDirection\": \"column\",\r\n          \"margin\": \"2rem auto\",\r\n          \"width\": \"80%\",\r\n        }}>\r\n          <textarea style={{\r\n            \"resize\": \"none\",\r\n            \"height\": \"10rem\",\r\n          }}\r\n            value={about}\r\n            onChange={handleAboutChange}\r\n          ></textarea>\r\n          <div style={{\r\n            \"display\": \"flex\"\r\n          }}>\r\n            <AboutButton onClick={submitEditAbout}>편집완료</AboutButton>\r\n            <AboutButton\r\n              onClick={() => { setOnModifyMode(!onModifyMode) }}\r\n            >편집취소</AboutButton>\r\n          </div>\r\n        </div>\r\n        :\r\n        <div style={{\r\n          \"display\": \"flex\",\r\n          \"flexDirection\": \"column\",\r\n          \"justifyContent\": \"center\",\r\n          \"alignItems\": \"center\",\r\n          \"marginTop\": \"1rem\",\r\n        }}>\r\n          <AboutCard>{about === null ? \"아직 작성된 소개 글이 없습니다.\" : about}</AboutCard>\r\n          <LongButton\r\n            style={{\r\n              \"width\": \"80%\",\r\n              \"borderRadius\": \"0\"\r\n            }}\r\n            onClick={() => {\r\n              setOnModifyMode(!onModifyMode);\r\n            }}\r\n\r\n          >편집</LongButton>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst AboutButton = styled(LongButton)`\r\n  width : 50%;\r\n  border-radius : 0;\r\n`;\r\n\r\n\r\nconst AboutCard = styled.div`\r\n  width : 80%;\r\n  height : 6rem;\r\n  word-break : break-all;\r\n  margin : 0 auto;\r\n  padding : 0.5rem;\r\n  border : 1px solid black;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nexport default function CategoryCard(props) {\r\n  const deleteCategory = () => {\r\n    return axios.delete(`/api/v2/user/${props.userId}/categories/${props.category.id}`);\r\n  }\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory()\r\n      .then(response => {\r\n        alert(\"카테고리가 삭제되었습니다.\");\r\n        props.renderCategory();\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <CardLayout>\r\n      <h3 style={{\r\n        \"paddingLeft\": \"1rem\",\r\n        \"wordBreak\": \"break-all\",\r\n      }}>{props.category.name}</h3>\r\n      <XButton onClick={handleDeleteCategory}>X</XButton>\r\n    </CardLayout>\r\n  )\r\n}\r\n\r\nconst CardLayout = styled.div`\r\n  width : 90%;\r\n  margin : 0.2rem;\r\n  height : 5rem;\r\n  box-shadow : 0px 2px 10px 0px;\r\n  display : flex;\r\n  flex-direction : row;\r\n  align-items : center;\r\n  justify-content : space-between;\r\n`;\r\n\r\nconst XButton = styled.button`\r\n  margin-right : 0.5rem;\r\n  font-size : 1rem;\r\n  font-weight: 800;\r\n  background-color : #fafafa;\r\n  border : none;\r\n  &:hover{\r\n    cursor : pointer;\r\n  }\r\n  &:focus{\r\n    outline : none;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ModalBackLayout } from '../atoms/Layouts'\r\nimport axios from 'axios';\r\nimport CategoryCard from './CategoryCard';\r\nimport { Button } from '../atoms/Buttons';\r\n\r\nconst body = document.querySelector('#root');\r\n\r\nexport default function Category(props) {\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryName, setcategoryName] = useState(\"\");\r\n\r\n  const onCategoryNameChange = e => {\r\n    setcategoryName(e.currentTarget.value);\r\n  }\r\n  const submitCategories = () => {\r\n    if (categoryName.length < 2) {\r\n      alert(\"카테고리 이름을 적어주세요\")\r\n    } else {\r\n      const data = {\r\n        name: categoryName\r\n      }\r\n      axios.post(`/api/v2/user/${props.userId}/categories`, data)\r\n        .then(response => {\r\n          alert(\"카테고리가 추가 되었습니다\");\r\n          renderCategory();\r\n        })\r\n    }\r\n  }\r\n\r\n  const renderCategory = () => {\r\n    axios.get(`/api/v2/user/${props.userId}/categories`)\r\n      .then(response => {\r\n        setCategory(response.data);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    body.setAttribute(\"style\", \"overflow: hidden;\");\r\n    axios.get(`/api/v2/user/${props.userId}/categories`)\r\n      .then(response => {\r\n        setCategory(response.data);\r\n      })\r\n    return () => {\r\n      body.removeAttribute(\"style\");\r\n    }\r\n  }, [props])\r\n  return (\r\n    <ModalBackLayout>\r\n      <ModalLayout>\r\n        <p>\r\n          <span>카테고리 목록</span>\r\n          <button onClick={props.handleCategories}>X</button>\r\n        </p>\r\n        <div style={{\r\n          \"margin\": \"0 auto\",\r\n          \"width\": \"100%\"\r\n        }}>\r\n          {\r\n            category &&\r\n            category.map((cate, index) => {\r\n              return <CategoryCard renderCategory={renderCategory}\r\n                key={index}\r\n                userId={props.userId}\r\n                category={cate} />\r\n            })\r\n\r\n          }\r\n        </div>\r\n        <div style={{\r\n          \"display\": \"flex\",\r\n          \"flexDirection\": \"column\"\r\n\r\n        }}>\r\n          <input type=\"text\"\r\n            id=\"input\"\r\n            name=\"name\"\r\n            value={categoryName}\r\n            onChange={onCategoryNameChange}\r\n            placeholder=\"추가할 카테고리 이름을 넣어주세요\"\r\n            style={{ \"width\": \"100%\", \"border\": \"none\", \"height\": \"2rem\" }}\r\n          />\r\n          <Button style={{ \"width\": \"100%\" }} onClick={submitCategories}>추가</Button>\r\n        </div>\r\n\r\n      </ModalLayout>\r\n    </ModalBackLayout>\r\n  )\r\n}\r\n\r\nconst ModalLayout = styled.div`\r\n  width : 25rem;\r\n  padding : 1rem;\r\n  background-color : #fafafa;\r\n  display : flex;\r\n  flex-direction : column;\r\n  border-radius : 10px;\r\n  box-shadow : 0px 4px 6px 0px;\r\n\r\n  p{\r\n    display : flex;\r\n    justify-content : space-between;\r\n  }\r\n\r\n  p span{\r\n    font-size : 1.5rem;\r\n    font-weight : 600;\r\n  }\r\n\r\n  p button{\r\n    background-color : #fafafa;\r\n    border : none;\r\n    font-size:1.5rem;\r\n\r\n    &:hover{\r\n      cursor:pointer;\r\n    }\r\n    &:focus{\r\n      outline : none;\r\n    }\r\n  }\r\n\r\n  div{\r\n    margin : 1rem 1rem;\r\n    overflow:hidden;\r\n  }  \r\n\r\n  div label {\r\n    padding : 0.5rem;\r\n    background-color : black;\r\n    color : white;\r\n    margin-right : 0.5rem;\r\n  }\r\n  div input[type=\"file\"] {\r\n    width : 83.5%;\r\n    height : 2rem;\r\n  }\r\n\r\n  #file-upload-button{\r\n    height : 2rem;\r\n  }\r\n  \r\n  div select {\r\n    width : 83.5%;\r\n    height : 2rem;\r\n  }\r\n\r\n  @media screen and (max-width:500px){\r\n    width : 80%;    \r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\r\nimport UserPost from './components/user/UserPost';\r\nimport UserCategory from './components/user/UserCategory';\r\nimport UserAbout from './components/user/UserAbout';\r\nimport Footer from './components/common/Footer';\r\nimport { UserPageLayout, LayoutHeight } from './components/atoms/Layouts';\r\nimport axios from 'axios';\r\nimport { Button } from './components/atoms/Buttons';\r\nimport Category from './components/modal/Category';\r\n\r\nexport default function UserPage(props) {\r\n  const [OnModifyMode, setOnModifyMode] = useState(false);\r\n  const [OnCategories, setOnCategories] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [Username, setUsername] = useState(user.name);\r\n  const [SessionUser, setSessionUser] = useState(null);\r\n\r\n  const handleCategories = () => {\r\n    setOnCategories(!OnCategories);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/v2/user')\r\n      .then(response => {\r\n        setSessionUser(response.data);\r\n      }).catch(error => console.log(error));\r\n    if (props.match.params.userId) {\r\n      axios.get(`/api/v2/user/${props.match.params.userId}`)\r\n        .then(response => setUser(response.data));\r\n    }\r\n\r\n  }, [props.match.params.userId])\r\n\r\n  const handleModifyMode = () => {\r\n    setOnModifyMode(!OnModifyMode);\r\n  }\r\n\r\n  const submitEditUsername = () => {\r\n    const url = `/api/v2/user/${props.match.params.userId}`;\r\n    axios.put(url, {\r\n      name: Username,\r\n      picture: user.picture\r\n    })\r\n      .then(response => {\r\n        alert(\"수정이 완료되었습니다.\");\r\n        window.location.href = url;\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const usernameChange = (e) => {\r\n    setUsername(e.currentTarget.value);\r\n  }\r\n\r\n  const handleRemoveUser = () => {\r\n    window.confirm(\"정말로 탈퇴하시겠습니까?\")\r\n    axios.delete(`/api/v2/user/${props.match.params.userId}`)\r\n      .then(() => {\r\n        alert(\"탈퇴가 완료되었습니다.\")\r\n        window.location.href = \"/\"\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>{OnCategories && <Category handleCategories={handleCategories} userId={user.id} />}\r\n      <LayoutHeight style={{ \"marginBottom\": \"2rem\" }}>\r\n        <UserPageLayout>\r\n          <UserInfoLayout>\r\n            {OnModifyMode ?\r\n              <UserInfo>\r\n                <img style={{\r\n                  \"width\": \"8rem\",\r\n                  \"height\": \"8rem\",\r\n                  \"borderRadius\": \"8rem\",\r\n                }} src={`${user.picture}`} alt=\"userimg\"></img>\r\n                <input\r\n                  onChange={usernameChange}\r\n                  type=\"text\"\r\n                  placeholder=\"수정할 이름을 적어주세요\"\r\n                  style={{\r\n                    \"margin\": \"1rem\",\r\n                    \"height\": \"1.5rem\",\r\n                    \"border\": \"none\",\r\n                    \"borderBottom\": \"1px solid grey\",\r\n                  }}\r\n                />\r\n                <div>\r\n                  <Button onClick={submitEditUsername}>수정완료</Button>\r\n                  <span>  </span>\r\n                  <Button onClick={handleModifyMode}>수정취소</Button>\r\n                </div>\r\n              </UserInfo>\r\n              :\r\n              <UserInfo>\r\n                <img style={{\r\n                  \"width\": \"8rem\",\r\n                  \"height\": \"8rem\",\r\n                  \"borderRadius\": \"8rem\",\r\n                }} src={`${user.picture}`} alt=\"userimg\"></img>\r\n                <h3>{user.name}</h3>\r\n                {SessionUser && SessionUser.id === user?.id &&\r\n                  <>\r\n                    <div>\r\n                      <Button onClick={handleModifyMode}>회원수정</Button>\r\n                      <span>  </span>\r\n                      <Button onClick={handleRemoveUser}>회원탈퇴</Button>\r\n                    </div>\r\n                    <div>\r\n                      <Button style={{\r\n                        \"width\": \"100%\",\r\n                        \"marginTop\": \"0.3rem\"\r\n                      }}\r\n                        onClick={handleCategories}>카테고리 추가/삭제</Button>\r\n                    </div>\r\n                  </>\r\n                }\r\n              </UserInfo>\r\n            }\r\n          </UserInfoLayout>\r\n          <Router>\r\n            <UserMenu>\r\n              <NavLink to={`/api/v2/user/${props.match.params.userId}/posts`}\r\n                className=\"userNav\"\r\n                activeClassName=\"active\">포스트</NavLink>\r\n              <NavLink to={`/api/v2/user/${props.match.params.userId}/categories`}\r\n                className=\"userNav\"\r\n                activeClassName=\"active\">시리즈</NavLink>\r\n              <NavLink to={`/api/v2/user/${props.match.params.userId}/about`}\r\n                className=\"userNav\"\r\n                activeClassName=\"active\">소개</NavLink>\r\n            </UserMenu>\r\n            <Switch>\r\n              <Route exact path={`/api/v2/user/${props.match.params.userId}/posts`} component={UserPost} />\r\n              <Route exact path={`/api/v2/user/${props.match.params.userId}/categories`} component={UserCategory} />\r\n              <Route exact path={`/api/v2/user/${props.match.params.userId}/about`} component={UserAbout} />\r\n            </Switch>\r\n          </Router>\r\n        </UserPageLayout>\r\n      </LayoutHeight>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nconst UserInfoLayout = styled.div`\r\n  width : 100%;\r\n  height : 25rem;\r\n  display : flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  width : 15rem;\r\n  height : 20rem;\r\n  display : flex;\r\n  flex-direction : column;\r\n  justify-content : center;\r\n  align-items :center;\r\n`;\r\n\r\nconst UserMenu = styled.div`\r\n  width : 100%;\r\n  height : 5rem;\r\n  background-color : black;\r\n  display : flex;\r\n  justify-content:center;\r\n  align-items : center;\r\n\r\n  .userNav{\r\n    width : 5rem;\r\n    height : 3rem;\r\n    text-decoration : none;\r\n    color : white;\r\n    font-size : 1.2rem;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items:center;\r\n  }\r\n\r\n  .userNav:hover{\r\n    text-decoration : underline;\r\n  }\r\n\r\n  .active{\r\n    text-decoration : underline;\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SearchedPostCard(props) {\r\n  return (\r\n    <>\r\n      <CardContainer>\r\n        <CardImg>\r\n          <Link to={`/api/v2/posts/${props.post.id}`}>\r\n            <img src={props.post.imageUrl} alt={props.post.title} />\r\n          </Link></CardImg>\r\n        <div id=\"postInfo\">\r\n          <Link to={`/api/v2/posts/${props.post.id}`}>\r\n            <CardTitle><span>{props.post.title}</span></CardTitle>\r\n          </Link>\r\n          <CardAuthor>\r\n            <Link to={`/api/v2/user/${props.post.user.id}`}>\r\n              <div id=\"author\">\r\n                <div id=\"profile\">\r\n                  <img src={props.post.user.picture}\r\n                    alt={props.post.user.name}\r\n                  />\r\n                </div>\r\n                <div id=\"userInfo\">\r\n                  <span>{props.post.user.name}</span>\r\n                  <span style={{ \"fontSize\": \"0.4rem\" }}>{props.post.modifiedDate}</span>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </CardAuthor>\r\n        </div>\r\n      </CardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardContainer = styled.div`\r\n  width : 340px;\r\n  margin : 2rem 1.25rem;\r\n  transition : box-shadow 0.25s ease-in-out, transform 0.25s ease-in 0s;\r\n  &:hover {\r\n    box-shadow : 0px 4px 16px 0px #3d3d3d;\r\n    transform : translateY(-.5rem);\r\n  }\r\n\r\n  #postInfo a{\r\n  text-decoration : none;\r\n  }\r\n  @media screen and (max-width:1200px){\r\n    width : 288px;\r\n    margin : 1.5rem 1rem;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    display : flex;\r\n    flex-direction : row-reverse;\r\n    width : calc(100% - 5rem);\r\n    margin : 1rem auto;\r\n    justify-content:space-between;\r\n    #postInfo{\r\n      width : 70%;\r\n      height : 100%;\r\n    }\r\n  }\r\n  @media screen and (max-width:768px){\r\n    width : 99% auto;\r\n    #postInfo{\r\n      width : 80%;\r\n      height : 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardImg = styled.div`\r\n  width : 100%;\r\n  height : 15.625rem;\r\n  overflow:hidden;\r\n  img {\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n  @media screen and (max-width:990px){\r\n    width : 9.375rem;\r\n    height : 9.375rem;\r\n    img{\r\n      width : 200%;\r\n      height : 200%;\r\n      margin : -50%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width : 100%;\r\n  font-size : 1.3rem;\r\n  font-weight : 700;\r\n  color : black;\r\n  \r\n  span{\r\n  text-decoration:none;\r\n  margin-left : .4rem;\r\n  }\r\n\r\n  @media screen and (max-width:990px){\r\n    height : 4.6875rem;\r\n    display:flex;\r\n\r\n    *{\r\n      margin : 2.3rem 1rem;\r\n    }\r\n  }\r\n\r\n`;\r\nconst CardAuthor = styled.div`\r\n  width : 100%;\r\n  padding : 0.3rem 0.5rem;\r\n  display : flex;\r\n  justify-content :space-between;\r\n  align-items:center;\r\n\r\n  a{\r\n    text-decoration:none;\r\n    color:black;\r\n  }\r\n\r\n  #author{\r\n    display : flex;\r\n    align-items : center;\r\n    font-size : .8rem;\r\n  }\r\n\r\n  #profile{\r\n    width : 2rem;\r\n    height : 2rem;\r\n    border-radius:2rem;\r\n    background-color : hotpink;\r\n    overflow: hidden;\r\n    margin-right : 0.3rem;\r\n  }\r\n\r\n  #profile img{\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n\r\n  #userInfo{\r\n    display : flex;\r\n    flex-direction:column;\r\n  }\r\n  #author:hover{\r\n    text-decoration:underline;\r\n  }\r\n\r\n  @media screen and (max-width:990px){\r\n    height : 4.6875rem;\r\n    #author{\r\n      margin-left : .5rem;\r\n      margin-bottom : 2rem;\r\n    }\r\n  }  \r\n`;","import React, { useEffect, useState } from 'react'\r\nimport SearchedPostCard from './components/posts/SearchedPostCard';\r\nimport { CardsLayout, SearchLayoutHeight } from './components/atoms/Layouts';\r\nimport Footer from './components/common/Footer';\r\nimport axios from 'axios';\r\n\r\nexport default function SearchedPost() {\r\n  const [Posts, setPosts] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v2/posts\")\r\n      .then(response => { setPosts(response.data); })\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n\r\n  const searchTextChange = (e) => {\r\n    setSearchText(e.currentTarget.value);\r\n  }\r\n\r\n  const searchPostList = Posts.filter(post => {\r\n    return post.title.includes(searchText)\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <SearchLayoutHeight>\r\n        <div style={{\r\n          \"margin\": \"0 auto\",\r\n          \"width\": \"80%\",\r\n          \"display\": \"flex\",\r\n          \"justifyContent\": \"center\"\r\n        }}>\r\n          <input type=\"text\"\r\n            style={{\r\n              \"margin\": \"2rem\",\r\n              \"width\": \"50%\",\r\n              \"height\": \"3rem\"\r\n            }}\r\n            placeholder=\"검색어를 입력하세요\"\r\n            value={searchText}\r\n            onChange={searchTextChange} />\r\n        </div>\r\n        <CardsLayout>\r\n          {searchPostList &&\r\n            searchPostList.map(post => {\r\n              return <SearchedPostCard post={post} key={post.id} />\r\n            })\r\n          }\r\n        </CardsLayout>\r\n      </SearchLayoutHeight>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PostCard from './components/posts/PostCard';\r\nimport { CardsLayout, LayoutHeight } from './components/atoms/Layouts';\r\nimport Footer from './components/common/Footer';\r\nimport axios from 'axios';\r\nimport Loading from './components/common/Loading';\r\nimport Pagination from './components/posts/Pagination';\r\n\r\nexport default function PopPosts() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [popPostList, setPopPostList] = useState([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 12;\r\n  const indexOfLast = currentPage * postsPerPage;\r\n  const indexOfFirst = indexOfLast - postsPerPage;\r\n\r\n  const currentPosts = (temp) => {\r\n    let currentPosts = 0;\r\n    currentPosts = temp.slice(indexOfFirst, indexOfLast);\r\n    return currentPosts;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.get(\"/api/v2/popPosts\")\r\n      .then(response => setPopPostList(response.data))\r\n      .catch(error => console.log(error));\r\n    setIsLoading(false);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Loading />\r\n        :\r\n        <>\r\n          <LayoutHeight>\r\n            <CardsLayout>\r\n              {popPostList &&\r\n                <PostCard post={currentPosts(popPostList)} />\r\n              }\r\n              {isLoading && <Loading />}\r\n            </CardsLayout>\r\n\r\n          </LayoutHeight>\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={popPostList.length}\r\n            paginate={setCurrentPage} />\r\n          <Footer />\r\n        </>\r\n      }</>\r\n  )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport PostList from './page/PostList';\r\nimport Header from './page/components/common/Header';\r\nimport PostForm from './page/PostForm';\r\nimport PostView from './page/PostView';\r\nimport UserPage from './page/UserPage';\r\nimport SearchedPost from './page/SearchedPost';\r\nimport PopPosts from './page/PopPosts';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PostList} />\r\n          <Route exact path=\"/api/v2/posts\" component={PostList} />\r\n          <Route exact path=\"/api/v2/popPosts\" component={PopPosts} />\r\n          <Route exact path=\"/api/v2/searchedPosts\" component={SearchedPost} />\r\n          <Route exact path=\"/api/v2/write\" component={PostForm} />\r\n          <Route exact path=\"/api/v2/posts/:postId\" component={PostView} />\r\n          <Route exact path=\"/api/v2/user/:userId\" component={UserPage} />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}